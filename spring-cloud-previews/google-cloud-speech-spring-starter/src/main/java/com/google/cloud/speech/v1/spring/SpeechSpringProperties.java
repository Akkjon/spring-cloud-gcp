/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.speech.v1.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;
import org.threeten.bp.Duration;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for Speech client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.cloud.speech.v1.spring.auto.speech")
public class SpeechSpringProperties implements CredentialsSupplier {
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");

  private String quotaProjectId;
  private Integer executorThreadCount;
  private boolean useRest = false;
  private Duration recognizeInitialRetryDelay;
  private Double recognizeRetryDelayMultiplier;
  private Duration recognizeMaxRetryDelay;
  private Duration recognizeInitialRpcTimeout;
  private Double recognizeRpcTimeoutMultiplier;
  private Duration recognizeMaxRpcTimeout;
  private Duration recognizeTotalTimeout;
  private Duration longRunningRecognizeInitialRpcTimeout;
  private Double longRunningRecognizeRpcTimeoutMultiplier;
  private Duration longRunningRecognizeMaxRpcTimeout;
  private Duration longRunningRecognizeTotalTimeout;
  private Duration streamingRecognizeInitialRetryDelay;
  private Double streamingRecognizeRetryDelayMultiplier;
  private Duration streamingRecognizeMaxRetryDelay;
  private Duration streamingRecognizeInitialRpcTimeout;
  private Double streamingRecognizeRpcTimeoutMultiplier;
  private Duration streamingRecognizeMaxRpcTimeout;
  private Duration streamingRecognizeTotalTimeout;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Duration getRecognizeInitialRetryDelay() {
    return this.recognizeInitialRetryDelay;
  }

  public void setRecognizeInitialRetryDelay(java.time.Duration recognizeInitialRetryDelay) {
    this.recognizeInitialRetryDelay = Duration.parse(recognizeInitialRetryDelay.toString());
  }

  public Double getRecognizeRetryDelayMultiplier() {
    return this.recognizeRetryDelayMultiplier;
  }

  public void setRecognizeRetryDelayMultiplier(Double recognizeRetryDelayMultiplier) {
    this.recognizeRetryDelayMultiplier = recognizeRetryDelayMultiplier;
  }

  public Duration getRecognizeMaxRetryDelay() {
    return this.recognizeMaxRetryDelay;
  }

  public void setRecognizeMaxRetryDelay(java.time.Duration recognizeMaxRetryDelay) {
    this.recognizeMaxRetryDelay = Duration.parse(recognizeMaxRetryDelay.toString());
  }

  public Duration getRecognizeInitialRpcTimeout() {
    return this.recognizeInitialRpcTimeout;
  }

  public void setRecognizeInitialRpcTimeout(java.time.Duration recognizeInitialRpcTimeout) {
    this.recognizeInitialRpcTimeout = Duration.parse(recognizeInitialRpcTimeout.toString());
  }

  public Double getRecognizeRpcTimeoutMultiplier() {
    return this.recognizeRpcTimeoutMultiplier;
  }

  public void setRecognizeRpcTimeoutMultiplier(Double recognizeRpcTimeoutMultiplier) {
    this.recognizeRpcTimeoutMultiplier = recognizeRpcTimeoutMultiplier;
  }

  public Duration getRecognizeMaxRpcTimeout() {
    return this.recognizeMaxRpcTimeout;
  }

  public void setRecognizeMaxRpcTimeout(java.time.Duration recognizeMaxRpcTimeout) {
    this.recognizeMaxRpcTimeout = Duration.parse(recognizeMaxRpcTimeout.toString());
  }

  public Duration getRecognizeTotalTimeout() {
    return this.recognizeTotalTimeout;
  }

  public void setRecognizeTotalTimeout(java.time.Duration recognizeTotalTimeout) {
    this.recognizeTotalTimeout = Duration.parse(recognizeTotalTimeout.toString());
  }

  public Duration getLongRunningRecognizeInitialRpcTimeout() {
    return this.longRunningRecognizeInitialRpcTimeout;
  }

  public void setLongRunningRecognizeInitialRpcTimeout(
      java.time.Duration longRunningRecognizeInitialRpcTimeout) {
    this.longRunningRecognizeInitialRpcTimeout =
        Duration.parse(longRunningRecognizeInitialRpcTimeout.toString());
  }

  public Double getLongRunningRecognizeRpcTimeoutMultiplier() {
    return this.longRunningRecognizeRpcTimeoutMultiplier;
  }

  public void setLongRunningRecognizeRpcTimeoutMultiplier(
      Double longRunningRecognizeRpcTimeoutMultiplier) {
    this.longRunningRecognizeRpcTimeoutMultiplier = longRunningRecognizeRpcTimeoutMultiplier;
  }

  public Duration getLongRunningRecognizeMaxRpcTimeout() {
    return this.longRunningRecognizeMaxRpcTimeout;
  }

  public void setLongRunningRecognizeMaxRpcTimeout(
      java.time.Duration longRunningRecognizeMaxRpcTimeout) {
    this.longRunningRecognizeMaxRpcTimeout =
        Duration.parse(longRunningRecognizeMaxRpcTimeout.toString());
  }

  public Duration getLongRunningRecognizeTotalTimeout() {
    return this.longRunningRecognizeTotalTimeout;
  }

  public void setLongRunningRecognizeTotalTimeout(
      java.time.Duration longRunningRecognizeTotalTimeout) {
    this.longRunningRecognizeTotalTimeout =
        Duration.parse(longRunningRecognizeTotalTimeout.toString());
  }

  public Duration getStreamingRecognizeInitialRetryDelay() {
    return this.streamingRecognizeInitialRetryDelay;
  }

  public void setStreamingRecognizeInitialRetryDelay(
      java.time.Duration streamingRecognizeInitialRetryDelay) {
    this.streamingRecognizeInitialRetryDelay =
        Duration.parse(streamingRecognizeInitialRetryDelay.toString());
  }

  public Double getStreamingRecognizeRetryDelayMultiplier() {
    return this.streamingRecognizeRetryDelayMultiplier;
  }

  public void setStreamingRecognizeRetryDelayMultiplier(
      Double streamingRecognizeRetryDelayMultiplier) {
    this.streamingRecognizeRetryDelayMultiplier = streamingRecognizeRetryDelayMultiplier;
  }

  public Duration getStreamingRecognizeMaxRetryDelay() {
    return this.streamingRecognizeMaxRetryDelay;
  }

  public void setStreamingRecognizeMaxRetryDelay(
      java.time.Duration streamingRecognizeMaxRetryDelay) {
    this.streamingRecognizeMaxRetryDelay =
        Duration.parse(streamingRecognizeMaxRetryDelay.toString());
  }

  public Duration getStreamingRecognizeInitialRpcTimeout() {
    return this.streamingRecognizeInitialRpcTimeout;
  }

  public void setStreamingRecognizeInitialRpcTimeout(
      java.time.Duration streamingRecognizeInitialRpcTimeout) {
    this.streamingRecognizeInitialRpcTimeout =
        Duration.parse(streamingRecognizeInitialRpcTimeout.toString());
  }

  public Double getStreamingRecognizeRpcTimeoutMultiplier() {
    return this.streamingRecognizeRpcTimeoutMultiplier;
  }

  public void setStreamingRecognizeRpcTimeoutMultiplier(
      Double streamingRecognizeRpcTimeoutMultiplier) {
    this.streamingRecognizeRpcTimeoutMultiplier = streamingRecognizeRpcTimeoutMultiplier;
  }

  public Duration getStreamingRecognizeMaxRpcTimeout() {
    return this.streamingRecognizeMaxRpcTimeout;
  }

  public void setStreamingRecognizeMaxRpcTimeout(
      java.time.Duration streamingRecognizeMaxRpcTimeout) {
    this.streamingRecognizeMaxRpcTimeout =
        Duration.parse(streamingRecognizeMaxRpcTimeout.toString());
  }

  public Duration getStreamingRecognizeTotalTimeout() {
    return this.streamingRecognizeTotalTimeout;
  }

  public void setStreamingRecognizeTotalTimeout(java.time.Duration streamingRecognizeTotalTimeout) {
    this.streamingRecognizeTotalTimeout = Duration.parse(streamingRecognizeTotalTimeout.toString());
  }
}
