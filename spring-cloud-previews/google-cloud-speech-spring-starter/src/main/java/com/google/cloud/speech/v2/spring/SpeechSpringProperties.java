/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.speech.v2.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import com.google.cloud.spring.core.Retry;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for Speech client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.cloud.speech.v2.spring.auto.speech")
public class SpeechSpringProperties implements CredentialsSupplier {
  /** OAuth2 credentials to authenticate and authorize calls to Google Cloud Client Libraries. */
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");
  /** Quota project to use for billing. */
  private String quotaProjectId;
  /** Number of threads used for executors. */
  private Integer executorThreadCount;
  /** Allow override of default transport channel provider to use REST instead of gRPC. */
  private boolean useRest = false;
  /** Allow override of retry settings at service level, applying to all of its RPC methods. */
  @NestedConfigurationProperty private Retry retry;
  /**
   * Allow override of retry settings at method-level for createRecognizer. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createRecognizerRetry;
  /**
   * Allow override of retry settings at method-level for listRecognizers. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listRecognizersRetry;
  /**
   * Allow override of retry settings at method-level for getRecognizer. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getRecognizerRetry;
  /**
   * Allow override of retry settings at method-level for updateRecognizer. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateRecognizerRetry;
  /**
   * Allow override of retry settings at method-level for deleteRecognizer. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteRecognizerRetry;
  /**
   * Allow override of retry settings at method-level for undeleteRecognizer. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry undeleteRecognizerRetry;
  /**
   * Allow override of retry settings at method-level for recognize. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry recognizeRetry;
  /**
   * Allow override of retry settings at method-level for streamingRecognize. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry streamingRecognizeRetry;
  /**
   * Allow override of retry settings at method-level for batchRecognize. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry batchRecognizeRetry;
  /**
   * Allow override of retry settings at method-level for getConfig. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getConfigRetry;
  /**
   * Allow override of retry settings at method-level for updateConfig. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateConfigRetry;
  /**
   * Allow override of retry settings at method-level for createCustomClass. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createCustomClassRetry;
  /**
   * Allow override of retry settings at method-level for listCustomClasses. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listCustomClassesRetry;
  /**
   * Allow override of retry settings at method-level for getCustomClass. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getCustomClassRetry;
  /**
   * Allow override of retry settings at method-level for updateCustomClass. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateCustomClassRetry;
  /**
   * Allow override of retry settings at method-level for deleteCustomClass. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteCustomClassRetry;
  /**
   * Allow override of retry settings at method-level for undeleteCustomClass. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry undeleteCustomClassRetry;
  /**
   * Allow override of retry settings at method-level for createPhraseSet. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createPhraseSetRetry;
  /**
   * Allow override of retry settings at method-level for listPhraseSets. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listPhraseSetsRetry;
  /**
   * Allow override of retry settings at method-level for getPhraseSet. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getPhraseSetRetry;
  /**
   * Allow override of retry settings at method-level for updatePhraseSet. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updatePhraseSetRetry;
  /**
   * Allow override of retry settings at method-level for deletePhraseSet. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deletePhraseSetRetry;
  /**
   * Allow override of retry settings at method-level for undeletePhraseSet. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry undeletePhraseSetRetry;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Retry getRetry() {
    return this.retry;
  }

  public void setRetry(Retry retry) {
    this.retry = retry;
  }

  public Retry getCreateRecognizerRetry() {
    return this.createRecognizerRetry;
  }

  public void setCreateRecognizerRetry(Retry createRecognizerRetry) {
    this.createRecognizerRetry = createRecognizerRetry;
  }

  public Retry getListRecognizersRetry() {
    return this.listRecognizersRetry;
  }

  public void setListRecognizersRetry(Retry listRecognizersRetry) {
    this.listRecognizersRetry = listRecognizersRetry;
  }

  public Retry getGetRecognizerRetry() {
    return this.getRecognizerRetry;
  }

  public void setGetRecognizerRetry(Retry getRecognizerRetry) {
    this.getRecognizerRetry = getRecognizerRetry;
  }

  public Retry getUpdateRecognizerRetry() {
    return this.updateRecognizerRetry;
  }

  public void setUpdateRecognizerRetry(Retry updateRecognizerRetry) {
    this.updateRecognizerRetry = updateRecognizerRetry;
  }

  public Retry getDeleteRecognizerRetry() {
    return this.deleteRecognizerRetry;
  }

  public void setDeleteRecognizerRetry(Retry deleteRecognizerRetry) {
    this.deleteRecognizerRetry = deleteRecognizerRetry;
  }

  public Retry getUndeleteRecognizerRetry() {
    return this.undeleteRecognizerRetry;
  }

  public void setUndeleteRecognizerRetry(Retry undeleteRecognizerRetry) {
    this.undeleteRecognizerRetry = undeleteRecognizerRetry;
  }

  public Retry getRecognizeRetry() {
    return this.recognizeRetry;
  }

  public void setRecognizeRetry(Retry recognizeRetry) {
    this.recognizeRetry = recognizeRetry;
  }

  public Retry getStreamingRecognizeRetry() {
    return this.streamingRecognizeRetry;
  }

  public void setStreamingRecognizeRetry(Retry streamingRecognizeRetry) {
    this.streamingRecognizeRetry = streamingRecognizeRetry;
  }

  public Retry getBatchRecognizeRetry() {
    return this.batchRecognizeRetry;
  }

  public void setBatchRecognizeRetry(Retry batchRecognizeRetry) {
    this.batchRecognizeRetry = batchRecognizeRetry;
  }

  public Retry getGetConfigRetry() {
    return this.getConfigRetry;
  }

  public void setGetConfigRetry(Retry getConfigRetry) {
    this.getConfigRetry = getConfigRetry;
  }

  public Retry getUpdateConfigRetry() {
    return this.updateConfigRetry;
  }

  public void setUpdateConfigRetry(Retry updateConfigRetry) {
    this.updateConfigRetry = updateConfigRetry;
  }

  public Retry getCreateCustomClassRetry() {
    return this.createCustomClassRetry;
  }

  public void setCreateCustomClassRetry(Retry createCustomClassRetry) {
    this.createCustomClassRetry = createCustomClassRetry;
  }

  public Retry getListCustomClassesRetry() {
    return this.listCustomClassesRetry;
  }

  public void setListCustomClassesRetry(Retry listCustomClassesRetry) {
    this.listCustomClassesRetry = listCustomClassesRetry;
  }

  public Retry getGetCustomClassRetry() {
    return this.getCustomClassRetry;
  }

  public void setGetCustomClassRetry(Retry getCustomClassRetry) {
    this.getCustomClassRetry = getCustomClassRetry;
  }

  public Retry getUpdateCustomClassRetry() {
    return this.updateCustomClassRetry;
  }

  public void setUpdateCustomClassRetry(Retry updateCustomClassRetry) {
    this.updateCustomClassRetry = updateCustomClassRetry;
  }

  public Retry getDeleteCustomClassRetry() {
    return this.deleteCustomClassRetry;
  }

  public void setDeleteCustomClassRetry(Retry deleteCustomClassRetry) {
    this.deleteCustomClassRetry = deleteCustomClassRetry;
  }

  public Retry getUndeleteCustomClassRetry() {
    return this.undeleteCustomClassRetry;
  }

  public void setUndeleteCustomClassRetry(Retry undeleteCustomClassRetry) {
    this.undeleteCustomClassRetry = undeleteCustomClassRetry;
  }

  public Retry getCreatePhraseSetRetry() {
    return this.createPhraseSetRetry;
  }

  public void setCreatePhraseSetRetry(Retry createPhraseSetRetry) {
    this.createPhraseSetRetry = createPhraseSetRetry;
  }

  public Retry getListPhraseSetsRetry() {
    return this.listPhraseSetsRetry;
  }

  public void setListPhraseSetsRetry(Retry listPhraseSetsRetry) {
    this.listPhraseSetsRetry = listPhraseSetsRetry;
  }

  public Retry getGetPhraseSetRetry() {
    return this.getPhraseSetRetry;
  }

  public void setGetPhraseSetRetry(Retry getPhraseSetRetry) {
    this.getPhraseSetRetry = getPhraseSetRetry;
  }

  public Retry getUpdatePhraseSetRetry() {
    return this.updatePhraseSetRetry;
  }

  public void setUpdatePhraseSetRetry(Retry updatePhraseSetRetry) {
    this.updatePhraseSetRetry = updatePhraseSetRetry;
  }

  public Retry getDeletePhraseSetRetry() {
    return this.deletePhraseSetRetry;
  }

  public void setDeletePhraseSetRetry(Retry deletePhraseSetRetry) {
    this.deletePhraseSetRetry = deletePhraseSetRetry;
  }

  public Retry getUndeletePhraseSetRetry() {
    return this.undeletePhraseSetRetry;
  }

  public void setUndeletePhraseSetRetry(Retry undeletePhraseSetRetry) {
    this.undeletePhraseSetRetry = undeletePhraseSetRetry;
  }
}
