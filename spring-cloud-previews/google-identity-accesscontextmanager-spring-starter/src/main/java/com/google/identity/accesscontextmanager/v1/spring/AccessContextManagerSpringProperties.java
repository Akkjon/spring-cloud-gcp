/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.identity.accesscontextmanager.v1.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import com.google.cloud.spring.core.Retry;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for AccessContextManager client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.identity.accesscontextmanager.v1.access-context-manager")
public class AccessContextManagerSpringProperties implements CredentialsSupplier {
  /** OAuth2 credentials to authenticate and authorize calls to Google Cloud Client Libraries. */
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");
  /** Quota project to use for billing. */
  private String quotaProjectId;
  /** Number of threads used for executors. */
  private Integer executorThreadCount;
  /** Allow override of default transport channel provider to use REST instead of gRPC. */
  private boolean useRest = false;
  /** Allow override of retry settings at service level, applying to all of its RPC methods. */
  @NestedConfigurationProperty private Retry retry;
  /**
   * Allow override of retry settings at method-level for listAccessPolicies. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listAccessPoliciesRetry;
  /**
   * Allow override of retry settings at method-level for getAccessPolicy. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getAccessPolicyRetry;
  /**
   * Allow override of retry settings at method-level for createAccessPolicy. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createAccessPolicyRetry;
  /**
   * Allow override of retry settings at method-level for updateAccessPolicy. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateAccessPolicyRetry;
  /**
   * Allow override of retry settings at method-level for deleteAccessPolicy. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteAccessPolicyRetry;
  /**
   * Allow override of retry settings at method-level for listAccessLevels. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listAccessLevelsRetry;
  /**
   * Allow override of retry settings at method-level for getAccessLevel. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getAccessLevelRetry;
  /**
   * Allow override of retry settings at method-level for createAccessLevel. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createAccessLevelRetry;
  /**
   * Allow override of retry settings at method-level for updateAccessLevel. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateAccessLevelRetry;
  /**
   * Allow override of retry settings at method-level for deleteAccessLevel. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteAccessLevelRetry;
  /**
   * Allow override of retry settings at method-level for replaceAccessLevels. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry replaceAccessLevelsRetry;
  /**
   * Allow override of retry settings at method-level for listServicePerimeters. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listServicePerimetersRetry;
  /**
   * Allow override of retry settings at method-level for getServicePerimeter. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getServicePerimeterRetry;
  /**
   * Allow override of retry settings at method-level for createServicePerimeter. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createServicePerimeterRetry;
  /**
   * Allow override of retry settings at method-level for updateServicePerimeter. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateServicePerimeterRetry;
  /**
   * Allow override of retry settings at method-level for deleteServicePerimeter. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteServicePerimeterRetry;
  /**
   * Allow override of retry settings at method-level for replaceServicePerimeters. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry replaceServicePerimetersRetry;
  /**
   * Allow override of retry settings at method-level for commitServicePerimeters. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry commitServicePerimetersRetry;
  /**
   * Allow override of retry settings at method-level for listGcpUserAccessBindings. If defined,
   * this takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listGcpUserAccessBindingsRetry;
  /**
   * Allow override of retry settings at method-level for getGcpUserAccessBinding. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getGcpUserAccessBindingRetry;
  /**
   * Allow override of retry settings at method-level for createGcpUserAccessBinding. If defined,
   * this takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createGcpUserAccessBindingRetry;
  /**
   * Allow override of retry settings at method-level for updateGcpUserAccessBinding. If defined,
   * this takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateGcpUserAccessBindingRetry;
  /**
   * Allow override of retry settings at method-level for deleteGcpUserAccessBinding. If defined,
   * this takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteGcpUserAccessBindingRetry;
  /**
   * Allow override of retry settings at method-level for setIamPolicy. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry setIamPolicyRetry;
  /**
   * Allow override of retry settings at method-level for getIamPolicy. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getIamPolicyRetry;
  /**
   * Allow override of retry settings at method-level for testIamPermissions. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry testIamPermissionsRetry;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Retry getRetry() {
    return this.retry;
  }

  public void setRetry(Retry retry) {
    this.retry = retry;
  }

  public Retry getListAccessPoliciesRetry() {
    return this.listAccessPoliciesRetry;
  }

  public void setListAccessPoliciesRetry(Retry listAccessPoliciesRetry) {
    this.listAccessPoliciesRetry = listAccessPoliciesRetry;
  }

  public Retry getGetAccessPolicyRetry() {
    return this.getAccessPolicyRetry;
  }

  public void setGetAccessPolicyRetry(Retry getAccessPolicyRetry) {
    this.getAccessPolicyRetry = getAccessPolicyRetry;
  }

  public Retry getCreateAccessPolicyRetry() {
    return this.createAccessPolicyRetry;
  }

  public void setCreateAccessPolicyRetry(Retry createAccessPolicyRetry) {
    this.createAccessPolicyRetry = createAccessPolicyRetry;
  }

  public Retry getUpdateAccessPolicyRetry() {
    return this.updateAccessPolicyRetry;
  }

  public void setUpdateAccessPolicyRetry(Retry updateAccessPolicyRetry) {
    this.updateAccessPolicyRetry = updateAccessPolicyRetry;
  }

  public Retry getDeleteAccessPolicyRetry() {
    return this.deleteAccessPolicyRetry;
  }

  public void setDeleteAccessPolicyRetry(Retry deleteAccessPolicyRetry) {
    this.deleteAccessPolicyRetry = deleteAccessPolicyRetry;
  }

  public Retry getListAccessLevelsRetry() {
    return this.listAccessLevelsRetry;
  }

  public void setListAccessLevelsRetry(Retry listAccessLevelsRetry) {
    this.listAccessLevelsRetry = listAccessLevelsRetry;
  }

  public Retry getGetAccessLevelRetry() {
    return this.getAccessLevelRetry;
  }

  public void setGetAccessLevelRetry(Retry getAccessLevelRetry) {
    this.getAccessLevelRetry = getAccessLevelRetry;
  }

  public Retry getCreateAccessLevelRetry() {
    return this.createAccessLevelRetry;
  }

  public void setCreateAccessLevelRetry(Retry createAccessLevelRetry) {
    this.createAccessLevelRetry = createAccessLevelRetry;
  }

  public Retry getUpdateAccessLevelRetry() {
    return this.updateAccessLevelRetry;
  }

  public void setUpdateAccessLevelRetry(Retry updateAccessLevelRetry) {
    this.updateAccessLevelRetry = updateAccessLevelRetry;
  }

  public Retry getDeleteAccessLevelRetry() {
    return this.deleteAccessLevelRetry;
  }

  public void setDeleteAccessLevelRetry(Retry deleteAccessLevelRetry) {
    this.deleteAccessLevelRetry = deleteAccessLevelRetry;
  }

  public Retry getReplaceAccessLevelsRetry() {
    return this.replaceAccessLevelsRetry;
  }

  public void setReplaceAccessLevelsRetry(Retry replaceAccessLevelsRetry) {
    this.replaceAccessLevelsRetry = replaceAccessLevelsRetry;
  }

  public Retry getListServicePerimetersRetry() {
    return this.listServicePerimetersRetry;
  }

  public void setListServicePerimetersRetry(Retry listServicePerimetersRetry) {
    this.listServicePerimetersRetry = listServicePerimetersRetry;
  }

  public Retry getGetServicePerimeterRetry() {
    return this.getServicePerimeterRetry;
  }

  public void setGetServicePerimeterRetry(Retry getServicePerimeterRetry) {
    this.getServicePerimeterRetry = getServicePerimeterRetry;
  }

  public Retry getCreateServicePerimeterRetry() {
    return this.createServicePerimeterRetry;
  }

  public void setCreateServicePerimeterRetry(Retry createServicePerimeterRetry) {
    this.createServicePerimeterRetry = createServicePerimeterRetry;
  }

  public Retry getUpdateServicePerimeterRetry() {
    return this.updateServicePerimeterRetry;
  }

  public void setUpdateServicePerimeterRetry(Retry updateServicePerimeterRetry) {
    this.updateServicePerimeterRetry = updateServicePerimeterRetry;
  }

  public Retry getDeleteServicePerimeterRetry() {
    return this.deleteServicePerimeterRetry;
  }

  public void setDeleteServicePerimeterRetry(Retry deleteServicePerimeterRetry) {
    this.deleteServicePerimeterRetry = deleteServicePerimeterRetry;
  }

  public Retry getReplaceServicePerimetersRetry() {
    return this.replaceServicePerimetersRetry;
  }

  public void setReplaceServicePerimetersRetry(Retry replaceServicePerimetersRetry) {
    this.replaceServicePerimetersRetry = replaceServicePerimetersRetry;
  }

  public Retry getCommitServicePerimetersRetry() {
    return this.commitServicePerimetersRetry;
  }

  public void setCommitServicePerimetersRetry(Retry commitServicePerimetersRetry) {
    this.commitServicePerimetersRetry = commitServicePerimetersRetry;
  }

  public Retry getListGcpUserAccessBindingsRetry() {
    return this.listGcpUserAccessBindingsRetry;
  }

  public void setListGcpUserAccessBindingsRetry(Retry listGcpUserAccessBindingsRetry) {
    this.listGcpUserAccessBindingsRetry = listGcpUserAccessBindingsRetry;
  }

  public Retry getGetGcpUserAccessBindingRetry() {
    return this.getGcpUserAccessBindingRetry;
  }

  public void setGetGcpUserAccessBindingRetry(Retry getGcpUserAccessBindingRetry) {
    this.getGcpUserAccessBindingRetry = getGcpUserAccessBindingRetry;
  }

  public Retry getCreateGcpUserAccessBindingRetry() {
    return this.createGcpUserAccessBindingRetry;
  }

  public void setCreateGcpUserAccessBindingRetry(Retry createGcpUserAccessBindingRetry) {
    this.createGcpUserAccessBindingRetry = createGcpUserAccessBindingRetry;
  }

  public Retry getUpdateGcpUserAccessBindingRetry() {
    return this.updateGcpUserAccessBindingRetry;
  }

  public void setUpdateGcpUserAccessBindingRetry(Retry updateGcpUserAccessBindingRetry) {
    this.updateGcpUserAccessBindingRetry = updateGcpUserAccessBindingRetry;
  }

  public Retry getDeleteGcpUserAccessBindingRetry() {
    return this.deleteGcpUserAccessBindingRetry;
  }

  public void setDeleteGcpUserAccessBindingRetry(Retry deleteGcpUserAccessBindingRetry) {
    this.deleteGcpUserAccessBindingRetry = deleteGcpUserAccessBindingRetry;
  }

  public Retry getSetIamPolicyRetry() {
    return this.setIamPolicyRetry;
  }

  public void setSetIamPolicyRetry(Retry setIamPolicyRetry) {
    this.setIamPolicyRetry = setIamPolicyRetry;
  }

  public Retry getGetIamPolicyRetry() {
    return this.getIamPolicyRetry;
  }

  public void setGetIamPolicyRetry(Retry getIamPolicyRetry) {
    this.getIamPolicyRetry = getIamPolicyRetry;
  }

  public Retry getTestIamPermissionsRetry() {
    return this.testIamPermissionsRetry;
  }

  public void setTestIamPermissionsRetry(Retry testIamPermissionsRetry) {
    this.testIamPermissionsRetry = testIamPermissionsRetry;
  }
}
