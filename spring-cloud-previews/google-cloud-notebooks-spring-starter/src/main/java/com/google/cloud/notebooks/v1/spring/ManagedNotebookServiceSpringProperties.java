/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.notebooks.v1.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;
import org.threeten.bp.Duration;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for ManagedNotebookService client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.cloud.notebooks.v1.spring.auto.managed-notebook-service")
public class ManagedNotebookServiceSpringProperties implements CredentialsSupplier {
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");

  private String quotaProjectId;
  private Integer executorThreadCount;
  private Duration listRuntimesInitialRpcTimeout;
  private Double listRuntimesRpcTimeoutMultiplier;
  private Duration listRuntimesMaxRpcTimeout;
  private Duration listRuntimesTotalTimeout;
  private Duration getRuntimeInitialRpcTimeout;
  private Double getRuntimeRpcTimeoutMultiplier;
  private Duration getRuntimeMaxRpcTimeout;
  private Duration getRuntimeTotalTimeout;
  private Duration createRuntimeInitialRpcTimeout;
  private Double createRuntimeRpcTimeoutMultiplier;
  private Duration createRuntimeMaxRpcTimeout;
  private Duration createRuntimeTotalTimeout;
  private Duration deleteRuntimeInitialRpcTimeout;
  private Double deleteRuntimeRpcTimeoutMultiplier;
  private Duration deleteRuntimeMaxRpcTimeout;
  private Duration deleteRuntimeTotalTimeout;
  private Duration startRuntimeInitialRpcTimeout;
  private Double startRuntimeRpcTimeoutMultiplier;
  private Duration startRuntimeMaxRpcTimeout;
  private Duration startRuntimeTotalTimeout;
  private Duration stopRuntimeInitialRpcTimeout;
  private Double stopRuntimeRpcTimeoutMultiplier;
  private Duration stopRuntimeMaxRpcTimeout;
  private Duration stopRuntimeTotalTimeout;
  private Duration switchRuntimeInitialRpcTimeout;
  private Double switchRuntimeRpcTimeoutMultiplier;
  private Duration switchRuntimeMaxRpcTimeout;
  private Duration switchRuntimeTotalTimeout;
  private Duration resetRuntimeInitialRetryDelay;
  private Double resetRuntimeRetryDelayMultiplier;
  private Duration resetRuntimeMaxRetryDelay;
  private Duration resetRuntimeInitialRpcTimeout;
  private Double resetRuntimeRpcTimeoutMultiplier;
  private Duration resetRuntimeMaxRpcTimeout;
  private Duration resetRuntimeTotalTimeout;
  private Duration reportRuntimeEventInitialRpcTimeout;
  private Double reportRuntimeEventRpcTimeoutMultiplier;
  private Duration reportRuntimeEventMaxRpcTimeout;
  private Duration reportRuntimeEventTotalTimeout;
  private Duration refreshRuntimeTokenInternalInitialRetryDelay;
  private Double refreshRuntimeTokenInternalRetryDelayMultiplier;
  private Duration refreshRuntimeTokenInternalMaxRetryDelay;
  private Duration refreshRuntimeTokenInternalInitialRpcTimeout;
  private Double refreshRuntimeTokenInternalRpcTimeoutMultiplier;
  private Duration refreshRuntimeTokenInternalMaxRpcTimeout;
  private Duration refreshRuntimeTokenInternalTotalTimeout;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Duration getListRuntimesInitialRpcTimeout() {
    return this.listRuntimesInitialRpcTimeout;
  }

  public void setListRuntimesInitialRpcTimeout(java.time.Duration listRuntimesInitialRpcTimeout) {
    this.listRuntimesInitialRpcTimeout = Duration.parse(listRuntimesInitialRpcTimeout.toString());
  }

  public Double getListRuntimesRpcTimeoutMultiplier() {
    return this.listRuntimesRpcTimeoutMultiplier;
  }

  public void setListRuntimesRpcTimeoutMultiplier(Double listRuntimesRpcTimeoutMultiplier) {
    this.listRuntimesRpcTimeoutMultiplier = listRuntimesRpcTimeoutMultiplier;
  }

  public Duration getListRuntimesMaxRpcTimeout() {
    return this.listRuntimesMaxRpcTimeout;
  }

  public void setListRuntimesMaxRpcTimeout(java.time.Duration listRuntimesMaxRpcTimeout) {
    this.listRuntimesMaxRpcTimeout = Duration.parse(listRuntimesMaxRpcTimeout.toString());
  }

  public Duration getListRuntimesTotalTimeout() {
    return this.listRuntimesTotalTimeout;
  }

  public void setListRuntimesTotalTimeout(java.time.Duration listRuntimesTotalTimeout) {
    this.listRuntimesTotalTimeout = Duration.parse(listRuntimesTotalTimeout.toString());
  }

  public Duration getGetRuntimeInitialRpcTimeout() {
    return this.getRuntimeInitialRpcTimeout;
  }

  public void setGetRuntimeInitialRpcTimeout(java.time.Duration getRuntimeInitialRpcTimeout) {
    this.getRuntimeInitialRpcTimeout = Duration.parse(getRuntimeInitialRpcTimeout.toString());
  }

  public Double getGetRuntimeRpcTimeoutMultiplier() {
    return this.getRuntimeRpcTimeoutMultiplier;
  }

  public void setGetRuntimeRpcTimeoutMultiplier(Double getRuntimeRpcTimeoutMultiplier) {
    this.getRuntimeRpcTimeoutMultiplier = getRuntimeRpcTimeoutMultiplier;
  }

  public Duration getGetRuntimeMaxRpcTimeout() {
    return this.getRuntimeMaxRpcTimeout;
  }

  public void setGetRuntimeMaxRpcTimeout(java.time.Duration getRuntimeMaxRpcTimeout) {
    this.getRuntimeMaxRpcTimeout = Duration.parse(getRuntimeMaxRpcTimeout.toString());
  }

  public Duration getGetRuntimeTotalTimeout() {
    return this.getRuntimeTotalTimeout;
  }

  public void setGetRuntimeTotalTimeout(java.time.Duration getRuntimeTotalTimeout) {
    this.getRuntimeTotalTimeout = Duration.parse(getRuntimeTotalTimeout.toString());
  }

  public Duration getCreateRuntimeInitialRpcTimeout() {
    return this.createRuntimeInitialRpcTimeout;
  }

  public void setCreateRuntimeInitialRpcTimeout(java.time.Duration createRuntimeInitialRpcTimeout) {
    this.createRuntimeInitialRpcTimeout = Duration.parse(createRuntimeInitialRpcTimeout.toString());
  }

  public Double getCreateRuntimeRpcTimeoutMultiplier() {
    return this.createRuntimeRpcTimeoutMultiplier;
  }

  public void setCreateRuntimeRpcTimeoutMultiplier(Double createRuntimeRpcTimeoutMultiplier) {
    this.createRuntimeRpcTimeoutMultiplier = createRuntimeRpcTimeoutMultiplier;
  }

  public Duration getCreateRuntimeMaxRpcTimeout() {
    return this.createRuntimeMaxRpcTimeout;
  }

  public void setCreateRuntimeMaxRpcTimeout(java.time.Duration createRuntimeMaxRpcTimeout) {
    this.createRuntimeMaxRpcTimeout = Duration.parse(createRuntimeMaxRpcTimeout.toString());
  }

  public Duration getCreateRuntimeTotalTimeout() {
    return this.createRuntimeTotalTimeout;
  }

  public void setCreateRuntimeTotalTimeout(java.time.Duration createRuntimeTotalTimeout) {
    this.createRuntimeTotalTimeout = Duration.parse(createRuntimeTotalTimeout.toString());
  }

  public Duration getDeleteRuntimeInitialRpcTimeout() {
    return this.deleteRuntimeInitialRpcTimeout;
  }

  public void setDeleteRuntimeInitialRpcTimeout(java.time.Duration deleteRuntimeInitialRpcTimeout) {
    this.deleteRuntimeInitialRpcTimeout = Duration.parse(deleteRuntimeInitialRpcTimeout.toString());
  }

  public Double getDeleteRuntimeRpcTimeoutMultiplier() {
    return this.deleteRuntimeRpcTimeoutMultiplier;
  }

  public void setDeleteRuntimeRpcTimeoutMultiplier(Double deleteRuntimeRpcTimeoutMultiplier) {
    this.deleteRuntimeRpcTimeoutMultiplier = deleteRuntimeRpcTimeoutMultiplier;
  }

  public Duration getDeleteRuntimeMaxRpcTimeout() {
    return this.deleteRuntimeMaxRpcTimeout;
  }

  public void setDeleteRuntimeMaxRpcTimeout(java.time.Duration deleteRuntimeMaxRpcTimeout) {
    this.deleteRuntimeMaxRpcTimeout = Duration.parse(deleteRuntimeMaxRpcTimeout.toString());
  }

  public Duration getDeleteRuntimeTotalTimeout() {
    return this.deleteRuntimeTotalTimeout;
  }

  public void setDeleteRuntimeTotalTimeout(java.time.Duration deleteRuntimeTotalTimeout) {
    this.deleteRuntimeTotalTimeout = Duration.parse(deleteRuntimeTotalTimeout.toString());
  }

  public Duration getStartRuntimeInitialRpcTimeout() {
    return this.startRuntimeInitialRpcTimeout;
  }

  public void setStartRuntimeInitialRpcTimeout(java.time.Duration startRuntimeInitialRpcTimeout) {
    this.startRuntimeInitialRpcTimeout = Duration.parse(startRuntimeInitialRpcTimeout.toString());
  }

  public Double getStartRuntimeRpcTimeoutMultiplier() {
    return this.startRuntimeRpcTimeoutMultiplier;
  }

  public void setStartRuntimeRpcTimeoutMultiplier(Double startRuntimeRpcTimeoutMultiplier) {
    this.startRuntimeRpcTimeoutMultiplier = startRuntimeRpcTimeoutMultiplier;
  }

  public Duration getStartRuntimeMaxRpcTimeout() {
    return this.startRuntimeMaxRpcTimeout;
  }

  public void setStartRuntimeMaxRpcTimeout(java.time.Duration startRuntimeMaxRpcTimeout) {
    this.startRuntimeMaxRpcTimeout = Duration.parse(startRuntimeMaxRpcTimeout.toString());
  }

  public Duration getStartRuntimeTotalTimeout() {
    return this.startRuntimeTotalTimeout;
  }

  public void setStartRuntimeTotalTimeout(java.time.Duration startRuntimeTotalTimeout) {
    this.startRuntimeTotalTimeout = Duration.parse(startRuntimeTotalTimeout.toString());
  }

  public Duration getStopRuntimeInitialRpcTimeout() {
    return this.stopRuntimeInitialRpcTimeout;
  }

  public void setStopRuntimeInitialRpcTimeout(java.time.Duration stopRuntimeInitialRpcTimeout) {
    this.stopRuntimeInitialRpcTimeout = Duration.parse(stopRuntimeInitialRpcTimeout.toString());
  }

  public Double getStopRuntimeRpcTimeoutMultiplier() {
    return this.stopRuntimeRpcTimeoutMultiplier;
  }

  public void setStopRuntimeRpcTimeoutMultiplier(Double stopRuntimeRpcTimeoutMultiplier) {
    this.stopRuntimeRpcTimeoutMultiplier = stopRuntimeRpcTimeoutMultiplier;
  }

  public Duration getStopRuntimeMaxRpcTimeout() {
    return this.stopRuntimeMaxRpcTimeout;
  }

  public void setStopRuntimeMaxRpcTimeout(java.time.Duration stopRuntimeMaxRpcTimeout) {
    this.stopRuntimeMaxRpcTimeout = Duration.parse(stopRuntimeMaxRpcTimeout.toString());
  }

  public Duration getStopRuntimeTotalTimeout() {
    return this.stopRuntimeTotalTimeout;
  }

  public void setStopRuntimeTotalTimeout(java.time.Duration stopRuntimeTotalTimeout) {
    this.stopRuntimeTotalTimeout = Duration.parse(stopRuntimeTotalTimeout.toString());
  }

  public Duration getSwitchRuntimeInitialRpcTimeout() {
    return this.switchRuntimeInitialRpcTimeout;
  }

  public void setSwitchRuntimeInitialRpcTimeout(java.time.Duration switchRuntimeInitialRpcTimeout) {
    this.switchRuntimeInitialRpcTimeout = Duration.parse(switchRuntimeInitialRpcTimeout.toString());
  }

  public Double getSwitchRuntimeRpcTimeoutMultiplier() {
    return this.switchRuntimeRpcTimeoutMultiplier;
  }

  public void setSwitchRuntimeRpcTimeoutMultiplier(Double switchRuntimeRpcTimeoutMultiplier) {
    this.switchRuntimeRpcTimeoutMultiplier = switchRuntimeRpcTimeoutMultiplier;
  }

  public Duration getSwitchRuntimeMaxRpcTimeout() {
    return this.switchRuntimeMaxRpcTimeout;
  }

  public void setSwitchRuntimeMaxRpcTimeout(java.time.Duration switchRuntimeMaxRpcTimeout) {
    this.switchRuntimeMaxRpcTimeout = Duration.parse(switchRuntimeMaxRpcTimeout.toString());
  }

  public Duration getSwitchRuntimeTotalTimeout() {
    return this.switchRuntimeTotalTimeout;
  }

  public void setSwitchRuntimeTotalTimeout(java.time.Duration switchRuntimeTotalTimeout) {
    this.switchRuntimeTotalTimeout = Duration.parse(switchRuntimeTotalTimeout.toString());
  }

  public Duration getResetRuntimeInitialRetryDelay() {
    return this.resetRuntimeInitialRetryDelay;
  }

  public void setResetRuntimeInitialRetryDelay(java.time.Duration resetRuntimeInitialRetryDelay) {
    this.resetRuntimeInitialRetryDelay = Duration.parse(resetRuntimeInitialRetryDelay.toString());
  }

  public Double getResetRuntimeRetryDelayMultiplier() {
    return this.resetRuntimeRetryDelayMultiplier;
  }

  public void setResetRuntimeRetryDelayMultiplier(Double resetRuntimeRetryDelayMultiplier) {
    this.resetRuntimeRetryDelayMultiplier = resetRuntimeRetryDelayMultiplier;
  }

  public Duration getResetRuntimeMaxRetryDelay() {
    return this.resetRuntimeMaxRetryDelay;
  }

  public void setResetRuntimeMaxRetryDelay(java.time.Duration resetRuntimeMaxRetryDelay) {
    this.resetRuntimeMaxRetryDelay = Duration.parse(resetRuntimeMaxRetryDelay.toString());
  }

  public Duration getResetRuntimeInitialRpcTimeout() {
    return this.resetRuntimeInitialRpcTimeout;
  }

  public void setResetRuntimeInitialRpcTimeout(java.time.Duration resetRuntimeInitialRpcTimeout) {
    this.resetRuntimeInitialRpcTimeout = Duration.parse(resetRuntimeInitialRpcTimeout.toString());
  }

  public Double getResetRuntimeRpcTimeoutMultiplier() {
    return this.resetRuntimeRpcTimeoutMultiplier;
  }

  public void setResetRuntimeRpcTimeoutMultiplier(Double resetRuntimeRpcTimeoutMultiplier) {
    this.resetRuntimeRpcTimeoutMultiplier = resetRuntimeRpcTimeoutMultiplier;
  }

  public Duration getResetRuntimeMaxRpcTimeout() {
    return this.resetRuntimeMaxRpcTimeout;
  }

  public void setResetRuntimeMaxRpcTimeout(java.time.Duration resetRuntimeMaxRpcTimeout) {
    this.resetRuntimeMaxRpcTimeout = Duration.parse(resetRuntimeMaxRpcTimeout.toString());
  }

  public Duration getResetRuntimeTotalTimeout() {
    return this.resetRuntimeTotalTimeout;
  }

  public void setResetRuntimeTotalTimeout(java.time.Duration resetRuntimeTotalTimeout) {
    this.resetRuntimeTotalTimeout = Duration.parse(resetRuntimeTotalTimeout.toString());
  }

  public Duration getReportRuntimeEventInitialRpcTimeout() {
    return this.reportRuntimeEventInitialRpcTimeout;
  }

  public void setReportRuntimeEventInitialRpcTimeout(
      java.time.Duration reportRuntimeEventInitialRpcTimeout) {
    this.reportRuntimeEventInitialRpcTimeout =
        Duration.parse(reportRuntimeEventInitialRpcTimeout.toString());
  }

  public Double getReportRuntimeEventRpcTimeoutMultiplier() {
    return this.reportRuntimeEventRpcTimeoutMultiplier;
  }

  public void setReportRuntimeEventRpcTimeoutMultiplier(
      Double reportRuntimeEventRpcTimeoutMultiplier) {
    this.reportRuntimeEventRpcTimeoutMultiplier = reportRuntimeEventRpcTimeoutMultiplier;
  }

  public Duration getReportRuntimeEventMaxRpcTimeout() {
    return this.reportRuntimeEventMaxRpcTimeout;
  }

  public void setReportRuntimeEventMaxRpcTimeout(
      java.time.Duration reportRuntimeEventMaxRpcTimeout) {
    this.reportRuntimeEventMaxRpcTimeout =
        Duration.parse(reportRuntimeEventMaxRpcTimeout.toString());
  }

  public Duration getReportRuntimeEventTotalTimeout() {
    return this.reportRuntimeEventTotalTimeout;
  }

  public void setReportRuntimeEventTotalTimeout(java.time.Duration reportRuntimeEventTotalTimeout) {
    this.reportRuntimeEventTotalTimeout = Duration.parse(reportRuntimeEventTotalTimeout.toString());
  }

  public Duration getRefreshRuntimeTokenInternalInitialRetryDelay() {
    return this.refreshRuntimeTokenInternalInitialRetryDelay;
  }

  public void setRefreshRuntimeTokenInternalInitialRetryDelay(
      java.time.Duration refreshRuntimeTokenInternalInitialRetryDelay) {
    this.refreshRuntimeTokenInternalInitialRetryDelay =
        Duration.parse(refreshRuntimeTokenInternalInitialRetryDelay.toString());
  }

  public Double getRefreshRuntimeTokenInternalRetryDelayMultiplier() {
    return this.refreshRuntimeTokenInternalRetryDelayMultiplier;
  }

  public void setRefreshRuntimeTokenInternalRetryDelayMultiplier(
      Double refreshRuntimeTokenInternalRetryDelayMultiplier) {
    this.refreshRuntimeTokenInternalRetryDelayMultiplier =
        refreshRuntimeTokenInternalRetryDelayMultiplier;
  }

  public Duration getRefreshRuntimeTokenInternalMaxRetryDelay() {
    return this.refreshRuntimeTokenInternalMaxRetryDelay;
  }

  public void setRefreshRuntimeTokenInternalMaxRetryDelay(
      java.time.Duration refreshRuntimeTokenInternalMaxRetryDelay) {
    this.refreshRuntimeTokenInternalMaxRetryDelay =
        Duration.parse(refreshRuntimeTokenInternalMaxRetryDelay.toString());
  }

  public Duration getRefreshRuntimeTokenInternalInitialRpcTimeout() {
    return this.refreshRuntimeTokenInternalInitialRpcTimeout;
  }

  public void setRefreshRuntimeTokenInternalInitialRpcTimeout(
      java.time.Duration refreshRuntimeTokenInternalInitialRpcTimeout) {
    this.refreshRuntimeTokenInternalInitialRpcTimeout =
        Duration.parse(refreshRuntimeTokenInternalInitialRpcTimeout.toString());
  }

  public Double getRefreshRuntimeTokenInternalRpcTimeoutMultiplier() {
    return this.refreshRuntimeTokenInternalRpcTimeoutMultiplier;
  }

  public void setRefreshRuntimeTokenInternalRpcTimeoutMultiplier(
      Double refreshRuntimeTokenInternalRpcTimeoutMultiplier) {
    this.refreshRuntimeTokenInternalRpcTimeoutMultiplier =
        refreshRuntimeTokenInternalRpcTimeoutMultiplier;
  }

  public Duration getRefreshRuntimeTokenInternalMaxRpcTimeout() {
    return this.refreshRuntimeTokenInternalMaxRpcTimeout;
  }

  public void setRefreshRuntimeTokenInternalMaxRpcTimeout(
      java.time.Duration refreshRuntimeTokenInternalMaxRpcTimeout) {
    this.refreshRuntimeTokenInternalMaxRpcTimeout =
        Duration.parse(refreshRuntimeTokenInternalMaxRpcTimeout.toString());
  }

  public Duration getRefreshRuntimeTokenInternalTotalTimeout() {
    return this.refreshRuntimeTokenInternalTotalTimeout;
  }

  public void setRefreshRuntimeTokenInternalTotalTimeout(
      java.time.Duration refreshRuntimeTokenInternalTotalTimeout) {
    this.refreshRuntimeTokenInternalTotalTimeout =
        Duration.parse(refreshRuntimeTokenInternalTotalTimeout.toString());
  }
}
