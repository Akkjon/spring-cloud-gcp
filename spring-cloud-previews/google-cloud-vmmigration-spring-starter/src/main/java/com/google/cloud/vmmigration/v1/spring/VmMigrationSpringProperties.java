/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.vmmigration.v1.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import com.google.cloud.spring.core.Retry;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for VmMigration client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.cloud.vmmigration.v1.spring.auto.vm-migration")
public class VmMigrationSpringProperties implements CredentialsSupplier {
  /** OAuth2 credentials to authenticate and authorize calls to Google Cloud Client Libraries. */
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");
  /** Quota project to use for billing. */
  private String quotaProjectId;
  /** Number of threads used for executors. */
  private Integer executorThreadCount;
  /** Allow override of default transport channel provider to use REST instead of gRPC. */
  private boolean useRest = false;
  /** Allow override of retry settings at service level, applying to all of its RPC methods. */
  @NestedConfigurationProperty private Retry retry;
  /**
   * Allow override of retry settings at method-level for listSources. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listSourcesRetry;
  /**
   * Allow override of retry settings at method-level for getSource. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getSourceRetry;
  /**
   * Allow override of retry settings at method-level for createSource. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createSourceRetry;
  /**
   * Allow override of retry settings at method-level for updateSource. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateSourceRetry;
  /**
   * Allow override of retry settings at method-level for deleteSource. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteSourceRetry;
  /**
   * Allow override of retry settings at method-level for fetchInventory. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry fetchInventoryRetry;
  /**
   * Allow override of retry settings at method-level for listUtilizationReports. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listUtilizationReportsRetry;
  /**
   * Allow override of retry settings at method-level for getUtilizationReport. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getUtilizationReportRetry;
  /**
   * Allow override of retry settings at method-level for createUtilizationReport. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createUtilizationReportRetry;
  /**
   * Allow override of retry settings at method-level for deleteUtilizationReport. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteUtilizationReportRetry;
  /**
   * Allow override of retry settings at method-level for listDatacenterConnectors. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listDatacenterConnectorsRetry;
  /**
   * Allow override of retry settings at method-level for getDatacenterConnector. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getDatacenterConnectorRetry;
  /**
   * Allow override of retry settings at method-level for createDatacenterConnector. If defined,
   * this takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createDatacenterConnectorRetry;
  /**
   * Allow override of retry settings at method-level for deleteDatacenterConnector. If defined,
   * this takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteDatacenterConnectorRetry;
  /**
   * Allow override of retry settings at method-level for upgradeAppliance. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry upgradeApplianceRetry;
  /**
   * Allow override of retry settings at method-level for createMigratingVm. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createMigratingVmRetry;
  /**
   * Allow override of retry settings at method-level for listMigratingVms. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listMigratingVmsRetry;
  /**
   * Allow override of retry settings at method-level for getMigratingVm. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getMigratingVmRetry;
  /**
   * Allow override of retry settings at method-level for updateMigratingVm. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateMigratingVmRetry;
  /**
   * Allow override of retry settings at method-level for deleteMigratingVm. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteMigratingVmRetry;
  /**
   * Allow override of retry settings at method-level for startMigration. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry startMigrationRetry;
  /**
   * Allow override of retry settings at method-level for resumeMigration. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry resumeMigrationRetry;
  /**
   * Allow override of retry settings at method-level for pauseMigration. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry pauseMigrationRetry;
  /**
   * Allow override of retry settings at method-level for finalizeMigration. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry finalizeMigrationRetry;
  /**
   * Allow override of retry settings at method-level for createCloneJob. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createCloneJobRetry;
  /**
   * Allow override of retry settings at method-level for cancelCloneJob. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry cancelCloneJobRetry;
  /**
   * Allow override of retry settings at method-level for listCloneJobs. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listCloneJobsRetry;
  /**
   * Allow override of retry settings at method-level for getCloneJob. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getCloneJobRetry;
  /**
   * Allow override of retry settings at method-level for createCutoverJob. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createCutoverJobRetry;
  /**
   * Allow override of retry settings at method-level for cancelCutoverJob. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry cancelCutoverJobRetry;
  /**
   * Allow override of retry settings at method-level for listCutoverJobs. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listCutoverJobsRetry;
  /**
   * Allow override of retry settings at method-level for getCutoverJob. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getCutoverJobRetry;
  /**
   * Allow override of retry settings at method-level for listGroups. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listGroupsRetry;
  /**
   * Allow override of retry settings at method-level for getGroup. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getGroupRetry;
  /**
   * Allow override of retry settings at method-level for createGroup. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createGroupRetry;
  /**
   * Allow override of retry settings at method-level for updateGroup. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateGroupRetry;
  /**
   * Allow override of retry settings at method-level for deleteGroup. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteGroupRetry;
  /**
   * Allow override of retry settings at method-level for addGroupMigration. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry addGroupMigrationRetry;
  /**
   * Allow override of retry settings at method-level for removeGroupMigration. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry removeGroupMigrationRetry;
  /**
   * Allow override of retry settings at method-level for listTargetProjects. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listTargetProjectsRetry;
  /**
   * Allow override of retry settings at method-level for getTargetProject. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getTargetProjectRetry;
  /**
   * Allow override of retry settings at method-level for createTargetProject. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createTargetProjectRetry;
  /**
   * Allow override of retry settings at method-level for updateTargetProject. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateTargetProjectRetry;
  /**
   * Allow override of retry settings at method-level for deleteTargetProject. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteTargetProjectRetry;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Retry getRetry() {
    return this.retry;
  }

  public void setRetry(Retry retry) {
    this.retry = retry;
  }

  public Retry getListSourcesRetry() {
    return this.listSourcesRetry;
  }

  public void setListSourcesRetry(Retry listSourcesRetry) {
    this.listSourcesRetry = listSourcesRetry;
  }

  public Retry getGetSourceRetry() {
    return this.getSourceRetry;
  }

  public void setGetSourceRetry(Retry getSourceRetry) {
    this.getSourceRetry = getSourceRetry;
  }

  public Retry getCreateSourceRetry() {
    return this.createSourceRetry;
  }

  public void setCreateSourceRetry(Retry createSourceRetry) {
    this.createSourceRetry = createSourceRetry;
  }

  public Retry getUpdateSourceRetry() {
    return this.updateSourceRetry;
  }

  public void setUpdateSourceRetry(Retry updateSourceRetry) {
    this.updateSourceRetry = updateSourceRetry;
  }

  public Retry getDeleteSourceRetry() {
    return this.deleteSourceRetry;
  }

  public void setDeleteSourceRetry(Retry deleteSourceRetry) {
    this.deleteSourceRetry = deleteSourceRetry;
  }

  public Retry getFetchInventoryRetry() {
    return this.fetchInventoryRetry;
  }

  public void setFetchInventoryRetry(Retry fetchInventoryRetry) {
    this.fetchInventoryRetry = fetchInventoryRetry;
  }

  public Retry getListUtilizationReportsRetry() {
    return this.listUtilizationReportsRetry;
  }

  public void setListUtilizationReportsRetry(Retry listUtilizationReportsRetry) {
    this.listUtilizationReportsRetry = listUtilizationReportsRetry;
  }

  public Retry getGetUtilizationReportRetry() {
    return this.getUtilizationReportRetry;
  }

  public void setGetUtilizationReportRetry(Retry getUtilizationReportRetry) {
    this.getUtilizationReportRetry = getUtilizationReportRetry;
  }

  public Retry getCreateUtilizationReportRetry() {
    return this.createUtilizationReportRetry;
  }

  public void setCreateUtilizationReportRetry(Retry createUtilizationReportRetry) {
    this.createUtilizationReportRetry = createUtilizationReportRetry;
  }

  public Retry getDeleteUtilizationReportRetry() {
    return this.deleteUtilizationReportRetry;
  }

  public void setDeleteUtilizationReportRetry(Retry deleteUtilizationReportRetry) {
    this.deleteUtilizationReportRetry = deleteUtilizationReportRetry;
  }

  public Retry getListDatacenterConnectorsRetry() {
    return this.listDatacenterConnectorsRetry;
  }

  public void setListDatacenterConnectorsRetry(Retry listDatacenterConnectorsRetry) {
    this.listDatacenterConnectorsRetry = listDatacenterConnectorsRetry;
  }

  public Retry getGetDatacenterConnectorRetry() {
    return this.getDatacenterConnectorRetry;
  }

  public void setGetDatacenterConnectorRetry(Retry getDatacenterConnectorRetry) {
    this.getDatacenterConnectorRetry = getDatacenterConnectorRetry;
  }

  public Retry getCreateDatacenterConnectorRetry() {
    return this.createDatacenterConnectorRetry;
  }

  public void setCreateDatacenterConnectorRetry(Retry createDatacenterConnectorRetry) {
    this.createDatacenterConnectorRetry = createDatacenterConnectorRetry;
  }

  public Retry getDeleteDatacenterConnectorRetry() {
    return this.deleteDatacenterConnectorRetry;
  }

  public void setDeleteDatacenterConnectorRetry(Retry deleteDatacenterConnectorRetry) {
    this.deleteDatacenterConnectorRetry = deleteDatacenterConnectorRetry;
  }

  public Retry getUpgradeApplianceRetry() {
    return this.upgradeApplianceRetry;
  }

  public void setUpgradeApplianceRetry(Retry upgradeApplianceRetry) {
    this.upgradeApplianceRetry = upgradeApplianceRetry;
  }

  public Retry getCreateMigratingVmRetry() {
    return this.createMigratingVmRetry;
  }

  public void setCreateMigratingVmRetry(Retry createMigratingVmRetry) {
    this.createMigratingVmRetry = createMigratingVmRetry;
  }

  public Retry getListMigratingVmsRetry() {
    return this.listMigratingVmsRetry;
  }

  public void setListMigratingVmsRetry(Retry listMigratingVmsRetry) {
    this.listMigratingVmsRetry = listMigratingVmsRetry;
  }

  public Retry getGetMigratingVmRetry() {
    return this.getMigratingVmRetry;
  }

  public void setGetMigratingVmRetry(Retry getMigratingVmRetry) {
    this.getMigratingVmRetry = getMigratingVmRetry;
  }

  public Retry getUpdateMigratingVmRetry() {
    return this.updateMigratingVmRetry;
  }

  public void setUpdateMigratingVmRetry(Retry updateMigratingVmRetry) {
    this.updateMigratingVmRetry = updateMigratingVmRetry;
  }

  public Retry getDeleteMigratingVmRetry() {
    return this.deleteMigratingVmRetry;
  }

  public void setDeleteMigratingVmRetry(Retry deleteMigratingVmRetry) {
    this.deleteMigratingVmRetry = deleteMigratingVmRetry;
  }

  public Retry getStartMigrationRetry() {
    return this.startMigrationRetry;
  }

  public void setStartMigrationRetry(Retry startMigrationRetry) {
    this.startMigrationRetry = startMigrationRetry;
  }

  public Retry getResumeMigrationRetry() {
    return this.resumeMigrationRetry;
  }

  public void setResumeMigrationRetry(Retry resumeMigrationRetry) {
    this.resumeMigrationRetry = resumeMigrationRetry;
  }

  public Retry getPauseMigrationRetry() {
    return this.pauseMigrationRetry;
  }

  public void setPauseMigrationRetry(Retry pauseMigrationRetry) {
    this.pauseMigrationRetry = pauseMigrationRetry;
  }

  public Retry getFinalizeMigrationRetry() {
    return this.finalizeMigrationRetry;
  }

  public void setFinalizeMigrationRetry(Retry finalizeMigrationRetry) {
    this.finalizeMigrationRetry = finalizeMigrationRetry;
  }

  public Retry getCreateCloneJobRetry() {
    return this.createCloneJobRetry;
  }

  public void setCreateCloneJobRetry(Retry createCloneJobRetry) {
    this.createCloneJobRetry = createCloneJobRetry;
  }

  public Retry getCancelCloneJobRetry() {
    return this.cancelCloneJobRetry;
  }

  public void setCancelCloneJobRetry(Retry cancelCloneJobRetry) {
    this.cancelCloneJobRetry = cancelCloneJobRetry;
  }

  public Retry getListCloneJobsRetry() {
    return this.listCloneJobsRetry;
  }

  public void setListCloneJobsRetry(Retry listCloneJobsRetry) {
    this.listCloneJobsRetry = listCloneJobsRetry;
  }

  public Retry getGetCloneJobRetry() {
    return this.getCloneJobRetry;
  }

  public void setGetCloneJobRetry(Retry getCloneJobRetry) {
    this.getCloneJobRetry = getCloneJobRetry;
  }

  public Retry getCreateCutoverJobRetry() {
    return this.createCutoverJobRetry;
  }

  public void setCreateCutoverJobRetry(Retry createCutoverJobRetry) {
    this.createCutoverJobRetry = createCutoverJobRetry;
  }

  public Retry getCancelCutoverJobRetry() {
    return this.cancelCutoverJobRetry;
  }

  public void setCancelCutoverJobRetry(Retry cancelCutoverJobRetry) {
    this.cancelCutoverJobRetry = cancelCutoverJobRetry;
  }

  public Retry getListCutoverJobsRetry() {
    return this.listCutoverJobsRetry;
  }

  public void setListCutoverJobsRetry(Retry listCutoverJobsRetry) {
    this.listCutoverJobsRetry = listCutoverJobsRetry;
  }

  public Retry getGetCutoverJobRetry() {
    return this.getCutoverJobRetry;
  }

  public void setGetCutoverJobRetry(Retry getCutoverJobRetry) {
    this.getCutoverJobRetry = getCutoverJobRetry;
  }

  public Retry getListGroupsRetry() {
    return this.listGroupsRetry;
  }

  public void setListGroupsRetry(Retry listGroupsRetry) {
    this.listGroupsRetry = listGroupsRetry;
  }

  public Retry getGetGroupRetry() {
    return this.getGroupRetry;
  }

  public void setGetGroupRetry(Retry getGroupRetry) {
    this.getGroupRetry = getGroupRetry;
  }

  public Retry getCreateGroupRetry() {
    return this.createGroupRetry;
  }

  public void setCreateGroupRetry(Retry createGroupRetry) {
    this.createGroupRetry = createGroupRetry;
  }

  public Retry getUpdateGroupRetry() {
    return this.updateGroupRetry;
  }

  public void setUpdateGroupRetry(Retry updateGroupRetry) {
    this.updateGroupRetry = updateGroupRetry;
  }

  public Retry getDeleteGroupRetry() {
    return this.deleteGroupRetry;
  }

  public void setDeleteGroupRetry(Retry deleteGroupRetry) {
    this.deleteGroupRetry = deleteGroupRetry;
  }

  public Retry getAddGroupMigrationRetry() {
    return this.addGroupMigrationRetry;
  }

  public void setAddGroupMigrationRetry(Retry addGroupMigrationRetry) {
    this.addGroupMigrationRetry = addGroupMigrationRetry;
  }

  public Retry getRemoveGroupMigrationRetry() {
    return this.removeGroupMigrationRetry;
  }

  public void setRemoveGroupMigrationRetry(Retry removeGroupMigrationRetry) {
    this.removeGroupMigrationRetry = removeGroupMigrationRetry;
  }

  public Retry getListTargetProjectsRetry() {
    return this.listTargetProjectsRetry;
  }

  public void setListTargetProjectsRetry(Retry listTargetProjectsRetry) {
    this.listTargetProjectsRetry = listTargetProjectsRetry;
  }

  public Retry getGetTargetProjectRetry() {
    return this.getTargetProjectRetry;
  }

  public void setGetTargetProjectRetry(Retry getTargetProjectRetry) {
    this.getTargetProjectRetry = getTargetProjectRetry;
  }

  public Retry getCreateTargetProjectRetry() {
    return this.createTargetProjectRetry;
  }

  public void setCreateTargetProjectRetry(Retry createTargetProjectRetry) {
    this.createTargetProjectRetry = createTargetProjectRetry;
  }

  public Retry getUpdateTargetProjectRetry() {
    return this.updateTargetProjectRetry;
  }

  public void setUpdateTargetProjectRetry(Retry updateTargetProjectRetry) {
    this.updateTargetProjectRetry = updateTargetProjectRetry;
  }

  public Retry getDeleteTargetProjectRetry() {
    return this.deleteTargetProjectRetry;
  }

  public void setDeleteTargetProjectRetry(Retry deleteTargetProjectRetry) {
    this.deleteTargetProjectRetry = deleteTargetProjectRetry;
  }
}
