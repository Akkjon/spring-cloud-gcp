/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.domains.v1.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for Domains client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.cloud.domains.v1.spring.auto.domains")
public class DomainsSpringProperties implements CredentialsSupplier {
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");

  private String quotaProjectId;
  private Integer executorThreadCount;
  private boolean useRest = false;
  private Double searchDomainsRpcTimeoutMultiplier;
  private Double retrieveRegisterParametersRpcTimeoutMultiplier;
  private Double registerDomainRpcTimeoutMultiplier;
  private Double retrieveTransferParametersRpcTimeoutMultiplier;
  private Double transferDomainRpcTimeoutMultiplier;
  private Double listRegistrationsRpcTimeoutMultiplier;
  private Double getRegistrationRpcTimeoutMultiplier;
  private Double updateRegistrationRpcTimeoutMultiplier;
  private Double configureManagementSettingsRpcTimeoutMultiplier;
  private Double configureDnsSettingsRpcTimeoutMultiplier;
  private Double configureContactSettingsRpcTimeoutMultiplier;
  private Double exportRegistrationRpcTimeoutMultiplier;
  private Double deleteRegistrationRpcTimeoutMultiplier;
  private Double retrieveAuthorizationCodeRpcTimeoutMultiplier;
  private Double resetAuthorizationCodeRpcTimeoutMultiplier;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Double getSearchDomainsRpcTimeoutMultiplier() {
    return this.searchDomainsRpcTimeoutMultiplier;
  }

  public void setSearchDomainsRpcTimeoutMultiplier(Double searchDomainsRpcTimeoutMultiplier) {
    this.searchDomainsRpcTimeoutMultiplier = searchDomainsRpcTimeoutMultiplier;
  }

  public Double getRetrieveRegisterParametersRpcTimeoutMultiplier() {
    return this.retrieveRegisterParametersRpcTimeoutMultiplier;
  }

  public void setRetrieveRegisterParametersRpcTimeoutMultiplier(
      Double retrieveRegisterParametersRpcTimeoutMultiplier) {
    this.retrieveRegisterParametersRpcTimeoutMultiplier =
        retrieveRegisterParametersRpcTimeoutMultiplier;
  }

  public Double getRegisterDomainRpcTimeoutMultiplier() {
    return this.registerDomainRpcTimeoutMultiplier;
  }

  public void setRegisterDomainRpcTimeoutMultiplier(Double registerDomainRpcTimeoutMultiplier) {
    this.registerDomainRpcTimeoutMultiplier = registerDomainRpcTimeoutMultiplier;
  }

  public Double getRetrieveTransferParametersRpcTimeoutMultiplier() {
    return this.retrieveTransferParametersRpcTimeoutMultiplier;
  }

  public void setRetrieveTransferParametersRpcTimeoutMultiplier(
      Double retrieveTransferParametersRpcTimeoutMultiplier) {
    this.retrieveTransferParametersRpcTimeoutMultiplier =
        retrieveTransferParametersRpcTimeoutMultiplier;
  }

  public Double getTransferDomainRpcTimeoutMultiplier() {
    return this.transferDomainRpcTimeoutMultiplier;
  }

  public void setTransferDomainRpcTimeoutMultiplier(Double transferDomainRpcTimeoutMultiplier) {
    this.transferDomainRpcTimeoutMultiplier = transferDomainRpcTimeoutMultiplier;
  }

  public Double getListRegistrationsRpcTimeoutMultiplier() {
    return this.listRegistrationsRpcTimeoutMultiplier;
  }

  public void setListRegistrationsRpcTimeoutMultiplier(
      Double listRegistrationsRpcTimeoutMultiplier) {
    this.listRegistrationsRpcTimeoutMultiplier = listRegistrationsRpcTimeoutMultiplier;
  }

  public Double getGetRegistrationRpcTimeoutMultiplier() {
    return this.getRegistrationRpcTimeoutMultiplier;
  }

  public void setGetRegistrationRpcTimeoutMultiplier(Double getRegistrationRpcTimeoutMultiplier) {
    this.getRegistrationRpcTimeoutMultiplier = getRegistrationRpcTimeoutMultiplier;
  }

  public Double getUpdateRegistrationRpcTimeoutMultiplier() {
    return this.updateRegistrationRpcTimeoutMultiplier;
  }

  public void setUpdateRegistrationRpcTimeoutMultiplier(
      Double updateRegistrationRpcTimeoutMultiplier) {
    this.updateRegistrationRpcTimeoutMultiplier = updateRegistrationRpcTimeoutMultiplier;
  }

  public Double getConfigureManagementSettingsRpcTimeoutMultiplier() {
    return this.configureManagementSettingsRpcTimeoutMultiplier;
  }

  public void setConfigureManagementSettingsRpcTimeoutMultiplier(
      Double configureManagementSettingsRpcTimeoutMultiplier) {
    this.configureManagementSettingsRpcTimeoutMultiplier =
        configureManagementSettingsRpcTimeoutMultiplier;
  }

  public Double getConfigureDnsSettingsRpcTimeoutMultiplier() {
    return this.configureDnsSettingsRpcTimeoutMultiplier;
  }

  public void setConfigureDnsSettingsRpcTimeoutMultiplier(
      Double configureDnsSettingsRpcTimeoutMultiplier) {
    this.configureDnsSettingsRpcTimeoutMultiplier = configureDnsSettingsRpcTimeoutMultiplier;
  }

  public Double getConfigureContactSettingsRpcTimeoutMultiplier() {
    return this.configureContactSettingsRpcTimeoutMultiplier;
  }

  public void setConfigureContactSettingsRpcTimeoutMultiplier(
      Double configureContactSettingsRpcTimeoutMultiplier) {
    this.configureContactSettingsRpcTimeoutMultiplier =
        configureContactSettingsRpcTimeoutMultiplier;
  }

  public Double getExportRegistrationRpcTimeoutMultiplier() {
    return this.exportRegistrationRpcTimeoutMultiplier;
  }

  public void setExportRegistrationRpcTimeoutMultiplier(
      Double exportRegistrationRpcTimeoutMultiplier) {
    this.exportRegistrationRpcTimeoutMultiplier = exportRegistrationRpcTimeoutMultiplier;
  }

  public Double getDeleteRegistrationRpcTimeoutMultiplier() {
    return this.deleteRegistrationRpcTimeoutMultiplier;
  }

  public void setDeleteRegistrationRpcTimeoutMultiplier(
      Double deleteRegistrationRpcTimeoutMultiplier) {
    this.deleteRegistrationRpcTimeoutMultiplier = deleteRegistrationRpcTimeoutMultiplier;
  }

  public Double getRetrieveAuthorizationCodeRpcTimeoutMultiplier() {
    return this.retrieveAuthorizationCodeRpcTimeoutMultiplier;
  }

  public void setRetrieveAuthorizationCodeRpcTimeoutMultiplier(
      Double retrieveAuthorizationCodeRpcTimeoutMultiplier) {
    this.retrieveAuthorizationCodeRpcTimeoutMultiplier =
        retrieveAuthorizationCodeRpcTimeoutMultiplier;
  }

  public Double getResetAuthorizationCodeRpcTimeoutMultiplier() {
    return this.resetAuthorizationCodeRpcTimeoutMultiplier;
  }

  public void setResetAuthorizationCodeRpcTimeoutMultiplier(
      Double resetAuthorizationCodeRpcTimeoutMultiplier) {
    this.resetAuthorizationCodeRpcTimeoutMultiplier = resetAuthorizationCodeRpcTimeoutMultiplier;
  }
}
