/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.servicedirectory.v1.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;
import org.threeten.bp.Duration;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for LookupService client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.cloud.servicedirectory.v1.spring.auto.lookup-service")
public class LookupServiceSpringProperties implements CredentialsSupplier {
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");

  private String quotaProjectId;
  private Integer executorThreadCount;
  private boolean useRest = false;
  private Duration resolveServiceInitialRetryDelay;
  private Double resolveServiceRetryDelayMultiplier;
  private Duration resolveServiceMaxRetryDelay;
  private Duration resolveServiceInitialRpcTimeout;
  private Double resolveServiceRpcTimeoutMultiplier;
  private Duration resolveServiceMaxRpcTimeout;
  private Duration resolveServiceTotalTimeout;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Duration getResolveServiceInitialRetryDelay() {
    return this.resolveServiceInitialRetryDelay;
  }

  public void setResolveServiceInitialRetryDelay(
      java.time.Duration resolveServiceInitialRetryDelay) {
    this.resolveServiceInitialRetryDelay =
        Duration.parse(resolveServiceInitialRetryDelay.toString());
  }

  public Double getResolveServiceRetryDelayMultiplier() {
    return this.resolveServiceRetryDelayMultiplier;
  }

  public void setResolveServiceRetryDelayMultiplier(Double resolveServiceRetryDelayMultiplier) {
    this.resolveServiceRetryDelayMultiplier = resolveServiceRetryDelayMultiplier;
  }

  public Duration getResolveServiceMaxRetryDelay() {
    return this.resolveServiceMaxRetryDelay;
  }

  public void setResolveServiceMaxRetryDelay(java.time.Duration resolveServiceMaxRetryDelay) {
    this.resolveServiceMaxRetryDelay = Duration.parse(resolveServiceMaxRetryDelay.toString());
  }

  public Duration getResolveServiceInitialRpcTimeout() {
    return this.resolveServiceInitialRpcTimeout;
  }

  public void setResolveServiceInitialRpcTimeout(
      java.time.Duration resolveServiceInitialRpcTimeout) {
    this.resolveServiceInitialRpcTimeout =
        Duration.parse(resolveServiceInitialRpcTimeout.toString());
  }

  public Double getResolveServiceRpcTimeoutMultiplier() {
    return this.resolveServiceRpcTimeoutMultiplier;
  }

  public void setResolveServiceRpcTimeoutMultiplier(Double resolveServiceRpcTimeoutMultiplier) {
    this.resolveServiceRpcTimeoutMultiplier = resolveServiceRpcTimeoutMultiplier;
  }

  public Duration getResolveServiceMaxRpcTimeout() {
    return this.resolveServiceMaxRpcTimeout;
  }

  public void setResolveServiceMaxRpcTimeout(java.time.Duration resolveServiceMaxRpcTimeout) {
    this.resolveServiceMaxRpcTimeout = Duration.parse(resolveServiceMaxRpcTimeout.toString());
  }

  public Duration getResolveServiceTotalTimeout() {
    return this.resolveServiceTotalTimeout;
  }

  public void setResolveServiceTotalTimeout(java.time.Duration resolveServiceTotalTimeout) {
    this.resolveServiceTotalTimeout = Duration.parse(resolveServiceTotalTimeout.toString());
  }
}
