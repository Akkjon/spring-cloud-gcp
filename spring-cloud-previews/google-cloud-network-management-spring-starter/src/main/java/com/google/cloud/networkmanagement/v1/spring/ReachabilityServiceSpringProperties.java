/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.networkmanagement.v1.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;
import org.threeten.bp.Duration;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for ReachabilityService client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.cloud.networkmanagement.v1.spring.auto.reachability-service")
public class ReachabilityServiceSpringProperties implements CredentialsSupplier {
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");

  private String quotaProjectId;
  private Integer executorThreadCount;
  private boolean useRest = false;
  private Duration listConnectivityTestsInitialRpcTimeout;
  private Double listConnectivityTestsRpcTimeoutMultiplier;
  private Duration listConnectivityTestsMaxRpcTimeout;
  private Duration listConnectivityTestsTotalTimeout;
  private Duration getConnectivityTestInitialRpcTimeout;
  private Double getConnectivityTestRpcTimeoutMultiplier;
  private Duration getConnectivityTestMaxRpcTimeout;
  private Duration getConnectivityTestTotalTimeout;
  private Duration createConnectivityTestInitialRpcTimeout;
  private Double createConnectivityTestRpcTimeoutMultiplier;
  private Duration createConnectivityTestMaxRpcTimeout;
  private Duration createConnectivityTestTotalTimeout;
  private Duration updateConnectivityTestInitialRpcTimeout;
  private Double updateConnectivityTestRpcTimeoutMultiplier;
  private Duration updateConnectivityTestMaxRpcTimeout;
  private Duration updateConnectivityTestTotalTimeout;
  private Duration rerunConnectivityTestInitialRpcTimeout;
  private Double rerunConnectivityTestRpcTimeoutMultiplier;
  private Duration rerunConnectivityTestMaxRpcTimeout;
  private Duration rerunConnectivityTestTotalTimeout;
  private Duration deleteConnectivityTestInitialRpcTimeout;
  private Double deleteConnectivityTestRpcTimeoutMultiplier;
  private Duration deleteConnectivityTestMaxRpcTimeout;
  private Duration deleteConnectivityTestTotalTimeout;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Duration getListConnectivityTestsInitialRpcTimeout() {
    return this.listConnectivityTestsInitialRpcTimeout;
  }

  public void setListConnectivityTestsInitialRpcTimeout(
      java.time.Duration listConnectivityTestsInitialRpcTimeout) {
    this.listConnectivityTestsInitialRpcTimeout =
        Duration.parse(listConnectivityTestsInitialRpcTimeout.toString());
  }

  public Double getListConnectivityTestsRpcTimeoutMultiplier() {
    return this.listConnectivityTestsRpcTimeoutMultiplier;
  }

  public void setListConnectivityTestsRpcTimeoutMultiplier(
      Double listConnectivityTestsRpcTimeoutMultiplier) {
    this.listConnectivityTestsRpcTimeoutMultiplier = listConnectivityTestsRpcTimeoutMultiplier;
  }

  public Duration getListConnectivityTestsMaxRpcTimeout() {
    return this.listConnectivityTestsMaxRpcTimeout;
  }

  public void setListConnectivityTestsMaxRpcTimeout(
      java.time.Duration listConnectivityTestsMaxRpcTimeout) {
    this.listConnectivityTestsMaxRpcTimeout =
        Duration.parse(listConnectivityTestsMaxRpcTimeout.toString());
  }

  public Duration getListConnectivityTestsTotalTimeout() {
    return this.listConnectivityTestsTotalTimeout;
  }

  public void setListConnectivityTestsTotalTimeout(
      java.time.Duration listConnectivityTestsTotalTimeout) {
    this.listConnectivityTestsTotalTimeout =
        Duration.parse(listConnectivityTestsTotalTimeout.toString());
  }

  public Duration getGetConnectivityTestInitialRpcTimeout() {
    return this.getConnectivityTestInitialRpcTimeout;
  }

  public void setGetConnectivityTestInitialRpcTimeout(
      java.time.Duration getConnectivityTestInitialRpcTimeout) {
    this.getConnectivityTestInitialRpcTimeout =
        Duration.parse(getConnectivityTestInitialRpcTimeout.toString());
  }

  public Double getGetConnectivityTestRpcTimeoutMultiplier() {
    return this.getConnectivityTestRpcTimeoutMultiplier;
  }

  public void setGetConnectivityTestRpcTimeoutMultiplier(
      Double getConnectivityTestRpcTimeoutMultiplier) {
    this.getConnectivityTestRpcTimeoutMultiplier = getConnectivityTestRpcTimeoutMultiplier;
  }

  public Duration getGetConnectivityTestMaxRpcTimeout() {
    return this.getConnectivityTestMaxRpcTimeout;
  }

  public void setGetConnectivityTestMaxRpcTimeout(
      java.time.Duration getConnectivityTestMaxRpcTimeout) {
    this.getConnectivityTestMaxRpcTimeout =
        Duration.parse(getConnectivityTestMaxRpcTimeout.toString());
  }

  public Duration getGetConnectivityTestTotalTimeout() {
    return this.getConnectivityTestTotalTimeout;
  }

  public void setGetConnectivityTestTotalTimeout(
      java.time.Duration getConnectivityTestTotalTimeout) {
    this.getConnectivityTestTotalTimeout =
        Duration.parse(getConnectivityTestTotalTimeout.toString());
  }

  public Duration getCreateConnectivityTestInitialRpcTimeout() {
    return this.createConnectivityTestInitialRpcTimeout;
  }

  public void setCreateConnectivityTestInitialRpcTimeout(
      java.time.Duration createConnectivityTestInitialRpcTimeout) {
    this.createConnectivityTestInitialRpcTimeout =
        Duration.parse(createConnectivityTestInitialRpcTimeout.toString());
  }

  public Double getCreateConnectivityTestRpcTimeoutMultiplier() {
    return this.createConnectivityTestRpcTimeoutMultiplier;
  }

  public void setCreateConnectivityTestRpcTimeoutMultiplier(
      Double createConnectivityTestRpcTimeoutMultiplier) {
    this.createConnectivityTestRpcTimeoutMultiplier = createConnectivityTestRpcTimeoutMultiplier;
  }

  public Duration getCreateConnectivityTestMaxRpcTimeout() {
    return this.createConnectivityTestMaxRpcTimeout;
  }

  public void setCreateConnectivityTestMaxRpcTimeout(
      java.time.Duration createConnectivityTestMaxRpcTimeout) {
    this.createConnectivityTestMaxRpcTimeout =
        Duration.parse(createConnectivityTestMaxRpcTimeout.toString());
  }

  public Duration getCreateConnectivityTestTotalTimeout() {
    return this.createConnectivityTestTotalTimeout;
  }

  public void setCreateConnectivityTestTotalTimeout(
      java.time.Duration createConnectivityTestTotalTimeout) {
    this.createConnectivityTestTotalTimeout =
        Duration.parse(createConnectivityTestTotalTimeout.toString());
  }

  public Duration getUpdateConnectivityTestInitialRpcTimeout() {
    return this.updateConnectivityTestInitialRpcTimeout;
  }

  public void setUpdateConnectivityTestInitialRpcTimeout(
      java.time.Duration updateConnectivityTestInitialRpcTimeout) {
    this.updateConnectivityTestInitialRpcTimeout =
        Duration.parse(updateConnectivityTestInitialRpcTimeout.toString());
  }

  public Double getUpdateConnectivityTestRpcTimeoutMultiplier() {
    return this.updateConnectivityTestRpcTimeoutMultiplier;
  }

  public void setUpdateConnectivityTestRpcTimeoutMultiplier(
      Double updateConnectivityTestRpcTimeoutMultiplier) {
    this.updateConnectivityTestRpcTimeoutMultiplier = updateConnectivityTestRpcTimeoutMultiplier;
  }

  public Duration getUpdateConnectivityTestMaxRpcTimeout() {
    return this.updateConnectivityTestMaxRpcTimeout;
  }

  public void setUpdateConnectivityTestMaxRpcTimeout(
      java.time.Duration updateConnectivityTestMaxRpcTimeout) {
    this.updateConnectivityTestMaxRpcTimeout =
        Duration.parse(updateConnectivityTestMaxRpcTimeout.toString());
  }

  public Duration getUpdateConnectivityTestTotalTimeout() {
    return this.updateConnectivityTestTotalTimeout;
  }

  public void setUpdateConnectivityTestTotalTimeout(
      java.time.Duration updateConnectivityTestTotalTimeout) {
    this.updateConnectivityTestTotalTimeout =
        Duration.parse(updateConnectivityTestTotalTimeout.toString());
  }

  public Duration getRerunConnectivityTestInitialRpcTimeout() {
    return this.rerunConnectivityTestInitialRpcTimeout;
  }

  public void setRerunConnectivityTestInitialRpcTimeout(
      java.time.Duration rerunConnectivityTestInitialRpcTimeout) {
    this.rerunConnectivityTestInitialRpcTimeout =
        Duration.parse(rerunConnectivityTestInitialRpcTimeout.toString());
  }

  public Double getRerunConnectivityTestRpcTimeoutMultiplier() {
    return this.rerunConnectivityTestRpcTimeoutMultiplier;
  }

  public void setRerunConnectivityTestRpcTimeoutMultiplier(
      Double rerunConnectivityTestRpcTimeoutMultiplier) {
    this.rerunConnectivityTestRpcTimeoutMultiplier = rerunConnectivityTestRpcTimeoutMultiplier;
  }

  public Duration getRerunConnectivityTestMaxRpcTimeout() {
    return this.rerunConnectivityTestMaxRpcTimeout;
  }

  public void setRerunConnectivityTestMaxRpcTimeout(
      java.time.Duration rerunConnectivityTestMaxRpcTimeout) {
    this.rerunConnectivityTestMaxRpcTimeout =
        Duration.parse(rerunConnectivityTestMaxRpcTimeout.toString());
  }

  public Duration getRerunConnectivityTestTotalTimeout() {
    return this.rerunConnectivityTestTotalTimeout;
  }

  public void setRerunConnectivityTestTotalTimeout(
      java.time.Duration rerunConnectivityTestTotalTimeout) {
    this.rerunConnectivityTestTotalTimeout =
        Duration.parse(rerunConnectivityTestTotalTimeout.toString());
  }

  public Duration getDeleteConnectivityTestInitialRpcTimeout() {
    return this.deleteConnectivityTestInitialRpcTimeout;
  }

  public void setDeleteConnectivityTestInitialRpcTimeout(
      java.time.Duration deleteConnectivityTestInitialRpcTimeout) {
    this.deleteConnectivityTestInitialRpcTimeout =
        Duration.parse(deleteConnectivityTestInitialRpcTimeout.toString());
  }

  public Double getDeleteConnectivityTestRpcTimeoutMultiplier() {
    return this.deleteConnectivityTestRpcTimeoutMultiplier;
  }

  public void setDeleteConnectivityTestRpcTimeoutMultiplier(
      Double deleteConnectivityTestRpcTimeoutMultiplier) {
    this.deleteConnectivityTestRpcTimeoutMultiplier = deleteConnectivityTestRpcTimeoutMultiplier;
  }

  public Duration getDeleteConnectivityTestMaxRpcTimeout() {
    return this.deleteConnectivityTestMaxRpcTimeout;
  }

  public void setDeleteConnectivityTestMaxRpcTimeout(
      java.time.Duration deleteConnectivityTestMaxRpcTimeout) {
    this.deleteConnectivityTestMaxRpcTimeout =
        Duration.parse(deleteConnectivityTestMaxRpcTimeout.toString());
  }

  public Duration getDeleteConnectivityTestTotalTimeout() {
    return this.deleteConnectivityTestTotalTimeout;
  }

  public void setDeleteConnectivityTestTotalTimeout(
      java.time.Duration deleteConnectivityTestTotalTimeout) {
    this.deleteConnectivityTestTotalTimeout =
        Duration.parse(deleteConnectivityTestTotalTimeout.toString());
  }
}
