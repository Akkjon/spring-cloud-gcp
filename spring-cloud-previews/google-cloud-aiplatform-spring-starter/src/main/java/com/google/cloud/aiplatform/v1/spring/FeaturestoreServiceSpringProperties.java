/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.aiplatform.v1.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import com.google.cloud.spring.core.Retry;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for FeaturestoreService client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.cloud.aiplatform.v1.spring.auto.featurestore-service")
public class FeaturestoreServiceSpringProperties implements CredentialsSupplier {
  /** OAuth2 credentials to authenticate and authorize calls to Google Cloud Client Libraries. */
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");
  /** Quota project to use for billing. */
  private String quotaProjectId;
  /** Number of threads used for executors. */
  private Integer executorThreadCount;
  /** Allow override of retry settings at service level, applying to all of its RPC methods. */
  @NestedConfigurationProperty private Retry retry;
  /**
   * Allow override of retry settings at method-level for createFeaturestore. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createFeaturestoreRetry;
  /**
   * Allow override of retry settings at method-level for getFeaturestore. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getFeaturestoreRetry;
  /**
   * Allow override of retry settings at method-level for listFeaturestores. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listFeaturestoresRetry;
  /**
   * Allow override of retry settings at method-level for updateFeaturestore. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateFeaturestoreRetry;
  /**
   * Allow override of retry settings at method-level for deleteFeaturestore. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteFeaturestoreRetry;
  /**
   * Allow override of retry settings at method-level for createEntityType. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createEntityTypeRetry;
  /**
   * Allow override of retry settings at method-level for getEntityType. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getEntityTypeRetry;
  /**
   * Allow override of retry settings at method-level for listEntityTypes. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listEntityTypesRetry;
  /**
   * Allow override of retry settings at method-level for updateEntityType. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateEntityTypeRetry;
  /**
   * Allow override of retry settings at method-level for deleteEntityType. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteEntityTypeRetry;
  /**
   * Allow override of retry settings at method-level for createFeature. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry createFeatureRetry;
  /**
   * Allow override of retry settings at method-level for batchCreateFeatures. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry batchCreateFeaturesRetry;
  /**
   * Allow override of retry settings at method-level for getFeature. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getFeatureRetry;
  /**
   * Allow override of retry settings at method-level for listFeatures. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listFeaturesRetry;
  /**
   * Allow override of retry settings at method-level for updateFeature. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry updateFeatureRetry;
  /**
   * Allow override of retry settings at method-level for deleteFeature. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry deleteFeatureRetry;
  /**
   * Allow override of retry settings at method-level for importFeatureValues. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry importFeatureValuesRetry;
  /**
   * Allow override of retry settings at method-level for batchReadFeatureValues. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry batchReadFeatureValuesRetry;
  /**
   * Allow override of retry settings at method-level for exportFeatureValues. If defined, this
   * takes precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry exportFeatureValuesRetry;
  /**
   * Allow override of retry settings at method-level for searchFeatures. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry searchFeaturesRetry;
  /**
   * Allow override of retry settings at method-level for listLocations. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry listLocationsRetry;
  /**
   * Allow override of retry settings at method-level for getLocation. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getLocationRetry;
  /**
   * Allow override of retry settings at method-level for setIamPolicy. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry setIamPolicyRetry;
  /**
   * Allow override of retry settings at method-level for getIamPolicy. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry getIamPolicyRetry;
  /**
   * Allow override of retry settings at method-level for testIamPermissions. If defined, this takes
   * precedence over service-level retry configurations for that RPC method.
   */
  @NestedConfigurationProperty private Retry testIamPermissionsRetry;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Retry getRetry() {
    return this.retry;
  }

  public void setRetry(Retry retry) {
    this.retry = retry;
  }

  public Retry getCreateFeaturestoreRetry() {
    return this.createFeaturestoreRetry;
  }

  public void setCreateFeaturestoreRetry(Retry createFeaturestoreRetry) {
    this.createFeaturestoreRetry = createFeaturestoreRetry;
  }

  public Retry getGetFeaturestoreRetry() {
    return this.getFeaturestoreRetry;
  }

  public void setGetFeaturestoreRetry(Retry getFeaturestoreRetry) {
    this.getFeaturestoreRetry = getFeaturestoreRetry;
  }

  public Retry getListFeaturestoresRetry() {
    return this.listFeaturestoresRetry;
  }

  public void setListFeaturestoresRetry(Retry listFeaturestoresRetry) {
    this.listFeaturestoresRetry = listFeaturestoresRetry;
  }

  public Retry getUpdateFeaturestoreRetry() {
    return this.updateFeaturestoreRetry;
  }

  public void setUpdateFeaturestoreRetry(Retry updateFeaturestoreRetry) {
    this.updateFeaturestoreRetry = updateFeaturestoreRetry;
  }

  public Retry getDeleteFeaturestoreRetry() {
    return this.deleteFeaturestoreRetry;
  }

  public void setDeleteFeaturestoreRetry(Retry deleteFeaturestoreRetry) {
    this.deleteFeaturestoreRetry = deleteFeaturestoreRetry;
  }

  public Retry getCreateEntityTypeRetry() {
    return this.createEntityTypeRetry;
  }

  public void setCreateEntityTypeRetry(Retry createEntityTypeRetry) {
    this.createEntityTypeRetry = createEntityTypeRetry;
  }

  public Retry getGetEntityTypeRetry() {
    return this.getEntityTypeRetry;
  }

  public void setGetEntityTypeRetry(Retry getEntityTypeRetry) {
    this.getEntityTypeRetry = getEntityTypeRetry;
  }

  public Retry getListEntityTypesRetry() {
    return this.listEntityTypesRetry;
  }

  public void setListEntityTypesRetry(Retry listEntityTypesRetry) {
    this.listEntityTypesRetry = listEntityTypesRetry;
  }

  public Retry getUpdateEntityTypeRetry() {
    return this.updateEntityTypeRetry;
  }

  public void setUpdateEntityTypeRetry(Retry updateEntityTypeRetry) {
    this.updateEntityTypeRetry = updateEntityTypeRetry;
  }

  public Retry getDeleteEntityTypeRetry() {
    return this.deleteEntityTypeRetry;
  }

  public void setDeleteEntityTypeRetry(Retry deleteEntityTypeRetry) {
    this.deleteEntityTypeRetry = deleteEntityTypeRetry;
  }

  public Retry getCreateFeatureRetry() {
    return this.createFeatureRetry;
  }

  public void setCreateFeatureRetry(Retry createFeatureRetry) {
    this.createFeatureRetry = createFeatureRetry;
  }

  public Retry getBatchCreateFeaturesRetry() {
    return this.batchCreateFeaturesRetry;
  }

  public void setBatchCreateFeaturesRetry(Retry batchCreateFeaturesRetry) {
    this.batchCreateFeaturesRetry = batchCreateFeaturesRetry;
  }

  public Retry getGetFeatureRetry() {
    return this.getFeatureRetry;
  }

  public void setGetFeatureRetry(Retry getFeatureRetry) {
    this.getFeatureRetry = getFeatureRetry;
  }

  public Retry getListFeaturesRetry() {
    return this.listFeaturesRetry;
  }

  public void setListFeaturesRetry(Retry listFeaturesRetry) {
    this.listFeaturesRetry = listFeaturesRetry;
  }

  public Retry getUpdateFeatureRetry() {
    return this.updateFeatureRetry;
  }

  public void setUpdateFeatureRetry(Retry updateFeatureRetry) {
    this.updateFeatureRetry = updateFeatureRetry;
  }

  public Retry getDeleteFeatureRetry() {
    return this.deleteFeatureRetry;
  }

  public void setDeleteFeatureRetry(Retry deleteFeatureRetry) {
    this.deleteFeatureRetry = deleteFeatureRetry;
  }

  public Retry getImportFeatureValuesRetry() {
    return this.importFeatureValuesRetry;
  }

  public void setImportFeatureValuesRetry(Retry importFeatureValuesRetry) {
    this.importFeatureValuesRetry = importFeatureValuesRetry;
  }

  public Retry getBatchReadFeatureValuesRetry() {
    return this.batchReadFeatureValuesRetry;
  }

  public void setBatchReadFeatureValuesRetry(Retry batchReadFeatureValuesRetry) {
    this.batchReadFeatureValuesRetry = batchReadFeatureValuesRetry;
  }

  public Retry getExportFeatureValuesRetry() {
    return this.exportFeatureValuesRetry;
  }

  public void setExportFeatureValuesRetry(Retry exportFeatureValuesRetry) {
    this.exportFeatureValuesRetry = exportFeatureValuesRetry;
  }

  public Retry getSearchFeaturesRetry() {
    return this.searchFeaturesRetry;
  }

  public void setSearchFeaturesRetry(Retry searchFeaturesRetry) {
    this.searchFeaturesRetry = searchFeaturesRetry;
  }

  public Retry getListLocationsRetry() {
    return this.listLocationsRetry;
  }

  public void setListLocationsRetry(Retry listLocationsRetry) {
    this.listLocationsRetry = listLocationsRetry;
  }

  public Retry getGetLocationRetry() {
    return this.getLocationRetry;
  }

  public void setGetLocationRetry(Retry getLocationRetry) {
    this.getLocationRetry = getLocationRetry;
  }

  public Retry getSetIamPolicyRetry() {
    return this.setIamPolicyRetry;
  }

  public void setSetIamPolicyRetry(Retry setIamPolicyRetry) {
    this.setIamPolicyRetry = setIamPolicyRetry;
  }

  public Retry getGetIamPolicyRetry() {
    return this.getIamPolicyRetry;
  }

  public void setGetIamPolicyRetry(Retry getIamPolicyRetry) {
    this.getIamPolicyRetry = getIamPolicyRetry;
  }

  public Retry getTestIamPermissionsRetry() {
    return this.testIamPermissionsRetry;
  }

  public void setTestIamPermissionsRetry(Retry testIamPermissionsRetry) {
    this.testIamPermissionsRetry = testIamPermissionsRetry;
  }
}
