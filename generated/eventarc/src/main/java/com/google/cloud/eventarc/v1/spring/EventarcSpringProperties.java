/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.eventarc.v1.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for Eventarc client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.cloud.eventarc.v1.spring.auto.eventarc")
public class EventarcSpringProperties implements CredentialsSupplier {
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");

  private String quotaProjectId;
  private Integer executorThreadCount;
  private boolean useRest = false;
  private Double getTriggerRpcTimeoutMultiplier;
  private Double listTriggersRpcTimeoutMultiplier;
  private Double createTriggerRpcTimeoutMultiplier;
  private Double updateTriggerRpcTimeoutMultiplier;
  private Double deleteTriggerRpcTimeoutMultiplier;
  private Double getChannelRpcTimeoutMultiplier;
  private Double listChannelsRpcTimeoutMultiplier;
  private Double createChannelRpcTimeoutMultiplier;
  private Double updateChannelRpcTimeoutMultiplier;
  private Double deleteChannelRpcTimeoutMultiplier;
  private Double getProviderRpcTimeoutMultiplier;
  private Double listProvidersRpcTimeoutMultiplier;
  private Double getChannelConnectionRpcTimeoutMultiplier;
  private Double listChannelConnectionsRpcTimeoutMultiplier;
  private Double createChannelConnectionRpcTimeoutMultiplier;
  private Double deleteChannelConnectionRpcTimeoutMultiplier;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Double getGetTriggerRpcTimeoutMultiplier() {
    return this.getTriggerRpcTimeoutMultiplier;
  }

  public void setGetTriggerRpcTimeoutMultiplier(Double getTriggerRpcTimeoutMultiplier) {
    this.getTriggerRpcTimeoutMultiplier = getTriggerRpcTimeoutMultiplier;
  }

  public Double getListTriggersRpcTimeoutMultiplier() {
    return this.listTriggersRpcTimeoutMultiplier;
  }

  public void setListTriggersRpcTimeoutMultiplier(Double listTriggersRpcTimeoutMultiplier) {
    this.listTriggersRpcTimeoutMultiplier = listTriggersRpcTimeoutMultiplier;
  }

  public Double getCreateTriggerRpcTimeoutMultiplier() {
    return this.createTriggerRpcTimeoutMultiplier;
  }

  public void setCreateTriggerRpcTimeoutMultiplier(Double createTriggerRpcTimeoutMultiplier) {
    this.createTriggerRpcTimeoutMultiplier = createTriggerRpcTimeoutMultiplier;
  }

  public Double getUpdateTriggerRpcTimeoutMultiplier() {
    return this.updateTriggerRpcTimeoutMultiplier;
  }

  public void setUpdateTriggerRpcTimeoutMultiplier(Double updateTriggerRpcTimeoutMultiplier) {
    this.updateTriggerRpcTimeoutMultiplier = updateTriggerRpcTimeoutMultiplier;
  }

  public Double getDeleteTriggerRpcTimeoutMultiplier() {
    return this.deleteTriggerRpcTimeoutMultiplier;
  }

  public void setDeleteTriggerRpcTimeoutMultiplier(Double deleteTriggerRpcTimeoutMultiplier) {
    this.deleteTriggerRpcTimeoutMultiplier = deleteTriggerRpcTimeoutMultiplier;
  }

  public Double getGetChannelRpcTimeoutMultiplier() {
    return this.getChannelRpcTimeoutMultiplier;
  }

  public void setGetChannelRpcTimeoutMultiplier(Double getChannelRpcTimeoutMultiplier) {
    this.getChannelRpcTimeoutMultiplier = getChannelRpcTimeoutMultiplier;
  }

  public Double getListChannelsRpcTimeoutMultiplier() {
    return this.listChannelsRpcTimeoutMultiplier;
  }

  public void setListChannelsRpcTimeoutMultiplier(Double listChannelsRpcTimeoutMultiplier) {
    this.listChannelsRpcTimeoutMultiplier = listChannelsRpcTimeoutMultiplier;
  }

  public Double getCreateChannelRpcTimeoutMultiplier() {
    return this.createChannelRpcTimeoutMultiplier;
  }

  public void setCreateChannelRpcTimeoutMultiplier(Double createChannelRpcTimeoutMultiplier) {
    this.createChannelRpcTimeoutMultiplier = createChannelRpcTimeoutMultiplier;
  }

  public Double getUpdateChannelRpcTimeoutMultiplier() {
    return this.updateChannelRpcTimeoutMultiplier;
  }

  public void setUpdateChannelRpcTimeoutMultiplier(Double updateChannelRpcTimeoutMultiplier) {
    this.updateChannelRpcTimeoutMultiplier = updateChannelRpcTimeoutMultiplier;
  }

  public Double getDeleteChannelRpcTimeoutMultiplier() {
    return this.deleteChannelRpcTimeoutMultiplier;
  }

  public void setDeleteChannelRpcTimeoutMultiplier(Double deleteChannelRpcTimeoutMultiplier) {
    this.deleteChannelRpcTimeoutMultiplier = deleteChannelRpcTimeoutMultiplier;
  }

  public Double getGetProviderRpcTimeoutMultiplier() {
    return this.getProviderRpcTimeoutMultiplier;
  }

  public void setGetProviderRpcTimeoutMultiplier(Double getProviderRpcTimeoutMultiplier) {
    this.getProviderRpcTimeoutMultiplier = getProviderRpcTimeoutMultiplier;
  }

  public Double getListProvidersRpcTimeoutMultiplier() {
    return this.listProvidersRpcTimeoutMultiplier;
  }

  public void setListProvidersRpcTimeoutMultiplier(Double listProvidersRpcTimeoutMultiplier) {
    this.listProvidersRpcTimeoutMultiplier = listProvidersRpcTimeoutMultiplier;
  }

  public Double getGetChannelConnectionRpcTimeoutMultiplier() {
    return this.getChannelConnectionRpcTimeoutMultiplier;
  }

  public void setGetChannelConnectionRpcTimeoutMultiplier(
      Double getChannelConnectionRpcTimeoutMultiplier) {
    this.getChannelConnectionRpcTimeoutMultiplier = getChannelConnectionRpcTimeoutMultiplier;
  }

  public Double getListChannelConnectionsRpcTimeoutMultiplier() {
    return this.listChannelConnectionsRpcTimeoutMultiplier;
  }

  public void setListChannelConnectionsRpcTimeoutMultiplier(
      Double listChannelConnectionsRpcTimeoutMultiplier) {
    this.listChannelConnectionsRpcTimeoutMultiplier = listChannelConnectionsRpcTimeoutMultiplier;
  }

  public Double getCreateChannelConnectionRpcTimeoutMultiplier() {
    return this.createChannelConnectionRpcTimeoutMultiplier;
  }

  public void setCreateChannelConnectionRpcTimeoutMultiplier(
      Double createChannelConnectionRpcTimeoutMultiplier) {
    this.createChannelConnectionRpcTimeoutMultiplier = createChannelConnectionRpcTimeoutMultiplier;
  }

  public Double getDeleteChannelConnectionRpcTimeoutMultiplier() {
    return this.deleteChannelConnectionRpcTimeoutMultiplier;
  }

  public void setDeleteChannelConnectionRpcTimeoutMultiplier(
      Double deleteChannelConnectionRpcTimeoutMultiplier) {
    this.deleteChannelConnectionRpcTimeoutMultiplier = deleteChannelConnectionRpcTimeoutMultiplier;
  }
}
