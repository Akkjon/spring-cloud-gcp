/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.appengine.v1.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;
import org.threeten.bp.Duration;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for Firewall client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.appengine.v1.spring.auto.firewall")
public class FirewallSpringProperties implements CredentialsSupplier {
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials(
          "https://www.googleapis.com/auth/appengine.admin",
          "https://www.googleapis.com/auth/cloud-platform",
          "https://www.googleapis.com/auth/cloud-platform.read-only");

  private String quotaProjectId;
  private Integer executorThreadCount;
  private boolean useRest = false;
  private Duration listIngressRulesInitialRpcTimeout;
  private Double listIngressRulesRpcTimeoutMultiplier;
  private Duration listIngressRulesMaxRpcTimeout;
  private Duration listIngressRulesTotalTimeout;
  private Duration batchUpdateIngressRulesInitialRpcTimeout;
  private Double batchUpdateIngressRulesRpcTimeoutMultiplier;
  private Duration batchUpdateIngressRulesMaxRpcTimeout;
  private Duration batchUpdateIngressRulesTotalTimeout;
  private Duration createIngressRuleInitialRpcTimeout;
  private Double createIngressRuleRpcTimeoutMultiplier;
  private Duration createIngressRuleMaxRpcTimeout;
  private Duration createIngressRuleTotalTimeout;
  private Duration getIngressRuleInitialRpcTimeout;
  private Double getIngressRuleRpcTimeoutMultiplier;
  private Duration getIngressRuleMaxRpcTimeout;
  private Duration getIngressRuleTotalTimeout;
  private Duration updateIngressRuleInitialRpcTimeout;
  private Double updateIngressRuleRpcTimeoutMultiplier;
  private Duration updateIngressRuleMaxRpcTimeout;
  private Duration updateIngressRuleTotalTimeout;
  private Duration deleteIngressRuleInitialRpcTimeout;
  private Double deleteIngressRuleRpcTimeoutMultiplier;
  private Duration deleteIngressRuleMaxRpcTimeout;
  private Duration deleteIngressRuleTotalTimeout;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Duration getListIngressRulesInitialRpcTimeout() {
    return this.listIngressRulesInitialRpcTimeout;
  }

  public void setListIngressRulesInitialRpcTimeout(
      java.time.Duration listIngressRulesInitialRpcTimeout) {
    this.listIngressRulesInitialRpcTimeout =
        Duration.parse(listIngressRulesInitialRpcTimeout.toString());
  }

  public Double getListIngressRulesRpcTimeoutMultiplier() {
    return this.listIngressRulesRpcTimeoutMultiplier;
  }

  public void setListIngressRulesRpcTimeoutMultiplier(Double listIngressRulesRpcTimeoutMultiplier) {
    this.listIngressRulesRpcTimeoutMultiplier = listIngressRulesRpcTimeoutMultiplier;
  }

  public Duration getListIngressRulesMaxRpcTimeout() {
    return this.listIngressRulesMaxRpcTimeout;
  }

  public void setListIngressRulesMaxRpcTimeout(java.time.Duration listIngressRulesMaxRpcTimeout) {
    this.listIngressRulesMaxRpcTimeout = Duration.parse(listIngressRulesMaxRpcTimeout.toString());
  }

  public Duration getListIngressRulesTotalTimeout() {
    return this.listIngressRulesTotalTimeout;
  }

  public void setListIngressRulesTotalTimeout(java.time.Duration listIngressRulesTotalTimeout) {
    this.listIngressRulesTotalTimeout = Duration.parse(listIngressRulesTotalTimeout.toString());
  }

  public Duration getBatchUpdateIngressRulesInitialRpcTimeout() {
    return this.batchUpdateIngressRulesInitialRpcTimeout;
  }

  public void setBatchUpdateIngressRulesInitialRpcTimeout(
      java.time.Duration batchUpdateIngressRulesInitialRpcTimeout) {
    this.batchUpdateIngressRulesInitialRpcTimeout =
        Duration.parse(batchUpdateIngressRulesInitialRpcTimeout.toString());
  }

  public Double getBatchUpdateIngressRulesRpcTimeoutMultiplier() {
    return this.batchUpdateIngressRulesRpcTimeoutMultiplier;
  }

  public void setBatchUpdateIngressRulesRpcTimeoutMultiplier(
      Double batchUpdateIngressRulesRpcTimeoutMultiplier) {
    this.batchUpdateIngressRulesRpcTimeoutMultiplier = batchUpdateIngressRulesRpcTimeoutMultiplier;
  }

  public Duration getBatchUpdateIngressRulesMaxRpcTimeout() {
    return this.batchUpdateIngressRulesMaxRpcTimeout;
  }

  public void setBatchUpdateIngressRulesMaxRpcTimeout(
      java.time.Duration batchUpdateIngressRulesMaxRpcTimeout) {
    this.batchUpdateIngressRulesMaxRpcTimeout =
        Duration.parse(batchUpdateIngressRulesMaxRpcTimeout.toString());
  }

  public Duration getBatchUpdateIngressRulesTotalTimeout() {
    return this.batchUpdateIngressRulesTotalTimeout;
  }

  public void setBatchUpdateIngressRulesTotalTimeout(
      java.time.Duration batchUpdateIngressRulesTotalTimeout) {
    this.batchUpdateIngressRulesTotalTimeout =
        Duration.parse(batchUpdateIngressRulesTotalTimeout.toString());
  }

  public Duration getCreateIngressRuleInitialRpcTimeout() {
    return this.createIngressRuleInitialRpcTimeout;
  }

  public void setCreateIngressRuleInitialRpcTimeout(
      java.time.Duration createIngressRuleInitialRpcTimeout) {
    this.createIngressRuleInitialRpcTimeout =
        Duration.parse(createIngressRuleInitialRpcTimeout.toString());
  }

  public Double getCreateIngressRuleRpcTimeoutMultiplier() {
    return this.createIngressRuleRpcTimeoutMultiplier;
  }

  public void setCreateIngressRuleRpcTimeoutMultiplier(
      Double createIngressRuleRpcTimeoutMultiplier) {
    this.createIngressRuleRpcTimeoutMultiplier = createIngressRuleRpcTimeoutMultiplier;
  }

  public Duration getCreateIngressRuleMaxRpcTimeout() {
    return this.createIngressRuleMaxRpcTimeout;
  }

  public void setCreateIngressRuleMaxRpcTimeout(java.time.Duration createIngressRuleMaxRpcTimeout) {
    this.createIngressRuleMaxRpcTimeout = Duration.parse(createIngressRuleMaxRpcTimeout.toString());
  }

  public Duration getCreateIngressRuleTotalTimeout() {
    return this.createIngressRuleTotalTimeout;
  }

  public void setCreateIngressRuleTotalTimeout(java.time.Duration createIngressRuleTotalTimeout) {
    this.createIngressRuleTotalTimeout = Duration.parse(createIngressRuleTotalTimeout.toString());
  }

  public Duration getGetIngressRuleInitialRpcTimeout() {
    return this.getIngressRuleInitialRpcTimeout;
  }

  public void setGetIngressRuleInitialRpcTimeout(
      java.time.Duration getIngressRuleInitialRpcTimeout) {
    this.getIngressRuleInitialRpcTimeout =
        Duration.parse(getIngressRuleInitialRpcTimeout.toString());
  }

  public Double getGetIngressRuleRpcTimeoutMultiplier() {
    return this.getIngressRuleRpcTimeoutMultiplier;
  }

  public void setGetIngressRuleRpcTimeoutMultiplier(Double getIngressRuleRpcTimeoutMultiplier) {
    this.getIngressRuleRpcTimeoutMultiplier = getIngressRuleRpcTimeoutMultiplier;
  }

  public Duration getGetIngressRuleMaxRpcTimeout() {
    return this.getIngressRuleMaxRpcTimeout;
  }

  public void setGetIngressRuleMaxRpcTimeout(java.time.Duration getIngressRuleMaxRpcTimeout) {
    this.getIngressRuleMaxRpcTimeout = Duration.parse(getIngressRuleMaxRpcTimeout.toString());
  }

  public Duration getGetIngressRuleTotalTimeout() {
    return this.getIngressRuleTotalTimeout;
  }

  public void setGetIngressRuleTotalTimeout(java.time.Duration getIngressRuleTotalTimeout) {
    this.getIngressRuleTotalTimeout = Duration.parse(getIngressRuleTotalTimeout.toString());
  }

  public Duration getUpdateIngressRuleInitialRpcTimeout() {
    return this.updateIngressRuleInitialRpcTimeout;
  }

  public void setUpdateIngressRuleInitialRpcTimeout(
      java.time.Duration updateIngressRuleInitialRpcTimeout) {
    this.updateIngressRuleInitialRpcTimeout =
        Duration.parse(updateIngressRuleInitialRpcTimeout.toString());
  }

  public Double getUpdateIngressRuleRpcTimeoutMultiplier() {
    return this.updateIngressRuleRpcTimeoutMultiplier;
  }

  public void setUpdateIngressRuleRpcTimeoutMultiplier(
      Double updateIngressRuleRpcTimeoutMultiplier) {
    this.updateIngressRuleRpcTimeoutMultiplier = updateIngressRuleRpcTimeoutMultiplier;
  }

  public Duration getUpdateIngressRuleMaxRpcTimeout() {
    return this.updateIngressRuleMaxRpcTimeout;
  }

  public void setUpdateIngressRuleMaxRpcTimeout(java.time.Duration updateIngressRuleMaxRpcTimeout) {
    this.updateIngressRuleMaxRpcTimeout = Duration.parse(updateIngressRuleMaxRpcTimeout.toString());
  }

  public Duration getUpdateIngressRuleTotalTimeout() {
    return this.updateIngressRuleTotalTimeout;
  }

  public void setUpdateIngressRuleTotalTimeout(java.time.Duration updateIngressRuleTotalTimeout) {
    this.updateIngressRuleTotalTimeout = Duration.parse(updateIngressRuleTotalTimeout.toString());
  }

  public Duration getDeleteIngressRuleInitialRpcTimeout() {
    return this.deleteIngressRuleInitialRpcTimeout;
  }

  public void setDeleteIngressRuleInitialRpcTimeout(
      java.time.Duration deleteIngressRuleInitialRpcTimeout) {
    this.deleteIngressRuleInitialRpcTimeout =
        Duration.parse(deleteIngressRuleInitialRpcTimeout.toString());
  }

  public Double getDeleteIngressRuleRpcTimeoutMultiplier() {
    return this.deleteIngressRuleRpcTimeoutMultiplier;
  }

  public void setDeleteIngressRuleRpcTimeoutMultiplier(
      Double deleteIngressRuleRpcTimeoutMultiplier) {
    this.deleteIngressRuleRpcTimeoutMultiplier = deleteIngressRuleRpcTimeoutMultiplier;
  }

  public Duration getDeleteIngressRuleMaxRpcTimeout() {
    return this.deleteIngressRuleMaxRpcTimeout;
  }

  public void setDeleteIngressRuleMaxRpcTimeout(java.time.Duration deleteIngressRuleMaxRpcTimeout) {
    this.deleteIngressRuleMaxRpcTimeout = Duration.parse(deleteIngressRuleMaxRpcTimeout.toString());
  }

  public Duration getDeleteIngressRuleTotalTimeout() {
    return this.deleteIngressRuleTotalTimeout;
  }

  public void setDeleteIngressRuleTotalTimeout(java.time.Duration deleteIngressRuleTotalTimeout) {
    this.deleteIngressRuleTotalTimeout = Duration.parse(deleteIngressRuleTotalTimeout.toString());
  }
}
