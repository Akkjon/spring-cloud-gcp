/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.appengine.v1.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;
import org.threeten.bp.Duration;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for DomainMappings client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.appengine.v1.spring.auto.domain-mappings")
public class DomainMappingsSpringProperties implements CredentialsSupplier {
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials(
          "https://www.googleapis.com/auth/appengine.admin",
          "https://www.googleapis.com/auth/cloud-platform",
          "https://www.googleapis.com/auth/cloud-platform.read-only");

  private String quotaProjectId;
  private Integer executorThreadCount;
  private boolean useRest = false;
  private Duration listDomainMappingsInitialRpcTimeout;
  private Double listDomainMappingsRpcTimeoutMultiplier;
  private Duration listDomainMappingsMaxRpcTimeout;
  private Duration listDomainMappingsTotalTimeout;
  private Duration getDomainMappingInitialRpcTimeout;
  private Double getDomainMappingRpcTimeoutMultiplier;
  private Duration getDomainMappingMaxRpcTimeout;
  private Duration getDomainMappingTotalTimeout;
  private Duration createDomainMappingInitialRpcTimeout;
  private Double createDomainMappingRpcTimeoutMultiplier;
  private Duration createDomainMappingMaxRpcTimeout;
  private Duration createDomainMappingTotalTimeout;
  private Duration updateDomainMappingInitialRpcTimeout;
  private Double updateDomainMappingRpcTimeoutMultiplier;
  private Duration updateDomainMappingMaxRpcTimeout;
  private Duration updateDomainMappingTotalTimeout;
  private Duration deleteDomainMappingInitialRpcTimeout;
  private Double deleteDomainMappingRpcTimeoutMultiplier;
  private Duration deleteDomainMappingMaxRpcTimeout;
  private Duration deleteDomainMappingTotalTimeout;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Duration getListDomainMappingsInitialRpcTimeout() {
    return this.listDomainMappingsInitialRpcTimeout;
  }

  public void setListDomainMappingsInitialRpcTimeout(
      java.time.Duration listDomainMappingsInitialRpcTimeout) {
    this.listDomainMappingsInitialRpcTimeout =
        Duration.parse(listDomainMappingsInitialRpcTimeout.toString());
  }

  public Double getListDomainMappingsRpcTimeoutMultiplier() {
    return this.listDomainMappingsRpcTimeoutMultiplier;
  }

  public void setListDomainMappingsRpcTimeoutMultiplier(
      Double listDomainMappingsRpcTimeoutMultiplier) {
    this.listDomainMappingsRpcTimeoutMultiplier = listDomainMappingsRpcTimeoutMultiplier;
  }

  public Duration getListDomainMappingsMaxRpcTimeout() {
    return this.listDomainMappingsMaxRpcTimeout;
  }

  public void setListDomainMappingsMaxRpcTimeout(
      java.time.Duration listDomainMappingsMaxRpcTimeout) {
    this.listDomainMappingsMaxRpcTimeout =
        Duration.parse(listDomainMappingsMaxRpcTimeout.toString());
  }

  public Duration getListDomainMappingsTotalTimeout() {
    return this.listDomainMappingsTotalTimeout;
  }

  public void setListDomainMappingsTotalTimeout(java.time.Duration listDomainMappingsTotalTimeout) {
    this.listDomainMappingsTotalTimeout = Duration.parse(listDomainMappingsTotalTimeout.toString());
  }

  public Duration getGetDomainMappingInitialRpcTimeout() {
    return this.getDomainMappingInitialRpcTimeout;
  }

  public void setGetDomainMappingInitialRpcTimeout(
      java.time.Duration getDomainMappingInitialRpcTimeout) {
    this.getDomainMappingInitialRpcTimeout =
        Duration.parse(getDomainMappingInitialRpcTimeout.toString());
  }

  public Double getGetDomainMappingRpcTimeoutMultiplier() {
    return this.getDomainMappingRpcTimeoutMultiplier;
  }

  public void setGetDomainMappingRpcTimeoutMultiplier(Double getDomainMappingRpcTimeoutMultiplier) {
    this.getDomainMappingRpcTimeoutMultiplier = getDomainMappingRpcTimeoutMultiplier;
  }

  public Duration getGetDomainMappingMaxRpcTimeout() {
    return this.getDomainMappingMaxRpcTimeout;
  }

  public void setGetDomainMappingMaxRpcTimeout(java.time.Duration getDomainMappingMaxRpcTimeout) {
    this.getDomainMappingMaxRpcTimeout = Duration.parse(getDomainMappingMaxRpcTimeout.toString());
  }

  public Duration getGetDomainMappingTotalTimeout() {
    return this.getDomainMappingTotalTimeout;
  }

  public void setGetDomainMappingTotalTimeout(java.time.Duration getDomainMappingTotalTimeout) {
    this.getDomainMappingTotalTimeout = Duration.parse(getDomainMappingTotalTimeout.toString());
  }

  public Duration getCreateDomainMappingInitialRpcTimeout() {
    return this.createDomainMappingInitialRpcTimeout;
  }

  public void setCreateDomainMappingInitialRpcTimeout(
      java.time.Duration createDomainMappingInitialRpcTimeout) {
    this.createDomainMappingInitialRpcTimeout =
        Duration.parse(createDomainMappingInitialRpcTimeout.toString());
  }

  public Double getCreateDomainMappingRpcTimeoutMultiplier() {
    return this.createDomainMappingRpcTimeoutMultiplier;
  }

  public void setCreateDomainMappingRpcTimeoutMultiplier(
      Double createDomainMappingRpcTimeoutMultiplier) {
    this.createDomainMappingRpcTimeoutMultiplier = createDomainMappingRpcTimeoutMultiplier;
  }

  public Duration getCreateDomainMappingMaxRpcTimeout() {
    return this.createDomainMappingMaxRpcTimeout;
  }

  public void setCreateDomainMappingMaxRpcTimeout(
      java.time.Duration createDomainMappingMaxRpcTimeout) {
    this.createDomainMappingMaxRpcTimeout =
        Duration.parse(createDomainMappingMaxRpcTimeout.toString());
  }

  public Duration getCreateDomainMappingTotalTimeout() {
    return this.createDomainMappingTotalTimeout;
  }

  public void setCreateDomainMappingTotalTimeout(
      java.time.Duration createDomainMappingTotalTimeout) {
    this.createDomainMappingTotalTimeout =
        Duration.parse(createDomainMappingTotalTimeout.toString());
  }

  public Duration getUpdateDomainMappingInitialRpcTimeout() {
    return this.updateDomainMappingInitialRpcTimeout;
  }

  public void setUpdateDomainMappingInitialRpcTimeout(
      java.time.Duration updateDomainMappingInitialRpcTimeout) {
    this.updateDomainMappingInitialRpcTimeout =
        Duration.parse(updateDomainMappingInitialRpcTimeout.toString());
  }

  public Double getUpdateDomainMappingRpcTimeoutMultiplier() {
    return this.updateDomainMappingRpcTimeoutMultiplier;
  }

  public void setUpdateDomainMappingRpcTimeoutMultiplier(
      Double updateDomainMappingRpcTimeoutMultiplier) {
    this.updateDomainMappingRpcTimeoutMultiplier = updateDomainMappingRpcTimeoutMultiplier;
  }

  public Duration getUpdateDomainMappingMaxRpcTimeout() {
    return this.updateDomainMappingMaxRpcTimeout;
  }

  public void setUpdateDomainMappingMaxRpcTimeout(
      java.time.Duration updateDomainMappingMaxRpcTimeout) {
    this.updateDomainMappingMaxRpcTimeout =
        Duration.parse(updateDomainMappingMaxRpcTimeout.toString());
  }

  public Duration getUpdateDomainMappingTotalTimeout() {
    return this.updateDomainMappingTotalTimeout;
  }

  public void setUpdateDomainMappingTotalTimeout(
      java.time.Duration updateDomainMappingTotalTimeout) {
    this.updateDomainMappingTotalTimeout =
        Duration.parse(updateDomainMappingTotalTimeout.toString());
  }

  public Duration getDeleteDomainMappingInitialRpcTimeout() {
    return this.deleteDomainMappingInitialRpcTimeout;
  }

  public void setDeleteDomainMappingInitialRpcTimeout(
      java.time.Duration deleteDomainMappingInitialRpcTimeout) {
    this.deleteDomainMappingInitialRpcTimeout =
        Duration.parse(deleteDomainMappingInitialRpcTimeout.toString());
  }

  public Double getDeleteDomainMappingRpcTimeoutMultiplier() {
    return this.deleteDomainMappingRpcTimeoutMultiplier;
  }

  public void setDeleteDomainMappingRpcTimeoutMultiplier(
      Double deleteDomainMappingRpcTimeoutMultiplier) {
    this.deleteDomainMappingRpcTimeoutMultiplier = deleteDomainMappingRpcTimeoutMultiplier;
  }

  public Duration getDeleteDomainMappingMaxRpcTimeout() {
    return this.deleteDomainMappingMaxRpcTimeout;
  }

  public void setDeleteDomainMappingMaxRpcTimeout(
      java.time.Duration deleteDomainMappingMaxRpcTimeout) {
    this.deleteDomainMappingMaxRpcTimeout =
        Duration.parse(deleteDomainMappingMaxRpcTimeout.toString());
  }

  public Duration getDeleteDomainMappingTotalTimeout() {
    return this.deleteDomainMappingTotalTimeout;
  }

  public void setDeleteDomainMappingTotalTimeout(
      java.time.Duration deleteDomainMappingTotalTimeout) {
    this.deleteDomainMappingTotalTimeout =
        Duration.parse(deleteDomainMappingTotalTimeout.toString());
  }
}
