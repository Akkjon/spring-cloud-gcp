/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.dataproc.v1.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for BatchController client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.cloud.dataproc.v1.spring.auto.batch-controller")
public class BatchControllerSpringProperties implements CredentialsSupplier {
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");

  private String quotaProjectId;
  private Integer executorThreadCount;
  private boolean useRest = false;
  private Double createBatchRpcTimeoutMultiplier;
  private Double getBatchRpcTimeoutMultiplier;
  private Double listBatchesRpcTimeoutMultiplier;
  private Double deleteBatchRpcTimeoutMultiplier;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Double getCreateBatchRpcTimeoutMultiplier() {
    return this.createBatchRpcTimeoutMultiplier;
  }

  public void setCreateBatchRpcTimeoutMultiplier(Double createBatchRpcTimeoutMultiplier) {
    this.createBatchRpcTimeoutMultiplier = createBatchRpcTimeoutMultiplier;
  }

  public Double getGetBatchRpcTimeoutMultiplier() {
    return this.getBatchRpcTimeoutMultiplier;
  }

  public void setGetBatchRpcTimeoutMultiplier(Double getBatchRpcTimeoutMultiplier) {
    this.getBatchRpcTimeoutMultiplier = getBatchRpcTimeoutMultiplier;
  }

  public Double getListBatchesRpcTimeoutMultiplier() {
    return this.listBatchesRpcTimeoutMultiplier;
  }

  public void setListBatchesRpcTimeoutMultiplier(Double listBatchesRpcTimeoutMultiplier) {
    this.listBatchesRpcTimeoutMultiplier = listBatchesRpcTimeoutMultiplier;
  }

  public Double getDeleteBatchRpcTimeoutMultiplier() {
    return this.deleteBatchRpcTimeoutMultiplier;
  }

  public void setDeleteBatchRpcTimeoutMultiplier(Double deleteBatchRpcTimeoutMultiplier) {
    this.deleteBatchRpcTimeoutMultiplier = deleteBatchRpcTimeoutMultiplier;
  }
}
