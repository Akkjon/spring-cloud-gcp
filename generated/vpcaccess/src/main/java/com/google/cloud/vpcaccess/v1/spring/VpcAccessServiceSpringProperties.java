/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.vpcaccess.v1.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;
import org.threeten.bp.Duration;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for VpcAccessService client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.cloud.vpcaccess.v1.spring.auto.vpc-access-service")
public class VpcAccessServiceSpringProperties implements CredentialsSupplier {
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");

  private String quotaProjectId;
  private Integer executorThreadCount;
  private boolean useRest = false;
  private Duration createConnectorInitialRpcTimeout;
  private Double createConnectorRpcTimeoutMultiplier;
  private Duration createConnectorMaxRpcTimeout;
  private Duration createConnectorTotalTimeout;
  private Duration getConnectorInitialRpcTimeout;
  private Double getConnectorRpcTimeoutMultiplier;
  private Duration getConnectorMaxRpcTimeout;
  private Duration getConnectorTotalTimeout;
  private Duration listConnectorsInitialRpcTimeout;
  private Double listConnectorsRpcTimeoutMultiplier;
  private Duration listConnectorsMaxRpcTimeout;
  private Duration listConnectorsTotalTimeout;
  private Duration deleteConnectorInitialRpcTimeout;
  private Double deleteConnectorRpcTimeoutMultiplier;
  private Duration deleteConnectorMaxRpcTimeout;
  private Duration deleteConnectorTotalTimeout;
  private Duration listLocationsInitialRetryDelay;
  private Double listLocationsRetryDelayMultiplier;
  private Duration listLocationsMaxRetryDelay;
  private Duration listLocationsInitialRpcTimeout;
  private Double listLocationsRpcTimeoutMultiplier;
  private Duration listLocationsMaxRpcTimeout;
  private Duration listLocationsTotalTimeout;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Duration getCreateConnectorInitialRpcTimeout() {
    return this.createConnectorInitialRpcTimeout;
  }

  public void setCreateConnectorInitialRpcTimeout(
      java.time.Duration createConnectorInitialRpcTimeout) {
    this.createConnectorInitialRpcTimeout =
        Duration.parse(createConnectorInitialRpcTimeout.toString());
  }

  public Double getCreateConnectorRpcTimeoutMultiplier() {
    return this.createConnectorRpcTimeoutMultiplier;
  }

  public void setCreateConnectorRpcTimeoutMultiplier(Double createConnectorRpcTimeoutMultiplier) {
    this.createConnectorRpcTimeoutMultiplier = createConnectorRpcTimeoutMultiplier;
  }

  public Duration getCreateConnectorMaxRpcTimeout() {
    return this.createConnectorMaxRpcTimeout;
  }

  public void setCreateConnectorMaxRpcTimeout(java.time.Duration createConnectorMaxRpcTimeout) {
    this.createConnectorMaxRpcTimeout = Duration.parse(createConnectorMaxRpcTimeout.toString());
  }

  public Duration getCreateConnectorTotalTimeout() {
    return this.createConnectorTotalTimeout;
  }

  public void setCreateConnectorTotalTimeout(java.time.Duration createConnectorTotalTimeout) {
    this.createConnectorTotalTimeout = Duration.parse(createConnectorTotalTimeout.toString());
  }

  public Duration getGetConnectorInitialRpcTimeout() {
    return this.getConnectorInitialRpcTimeout;
  }

  public void setGetConnectorInitialRpcTimeout(java.time.Duration getConnectorInitialRpcTimeout) {
    this.getConnectorInitialRpcTimeout = Duration.parse(getConnectorInitialRpcTimeout.toString());
  }

  public Double getGetConnectorRpcTimeoutMultiplier() {
    return this.getConnectorRpcTimeoutMultiplier;
  }

  public void setGetConnectorRpcTimeoutMultiplier(Double getConnectorRpcTimeoutMultiplier) {
    this.getConnectorRpcTimeoutMultiplier = getConnectorRpcTimeoutMultiplier;
  }

  public Duration getGetConnectorMaxRpcTimeout() {
    return this.getConnectorMaxRpcTimeout;
  }

  public void setGetConnectorMaxRpcTimeout(java.time.Duration getConnectorMaxRpcTimeout) {
    this.getConnectorMaxRpcTimeout = Duration.parse(getConnectorMaxRpcTimeout.toString());
  }

  public Duration getGetConnectorTotalTimeout() {
    return this.getConnectorTotalTimeout;
  }

  public void setGetConnectorTotalTimeout(java.time.Duration getConnectorTotalTimeout) {
    this.getConnectorTotalTimeout = Duration.parse(getConnectorTotalTimeout.toString());
  }

  public Duration getListConnectorsInitialRpcTimeout() {
    return this.listConnectorsInitialRpcTimeout;
  }

  public void setListConnectorsInitialRpcTimeout(
      java.time.Duration listConnectorsInitialRpcTimeout) {
    this.listConnectorsInitialRpcTimeout =
        Duration.parse(listConnectorsInitialRpcTimeout.toString());
  }

  public Double getListConnectorsRpcTimeoutMultiplier() {
    return this.listConnectorsRpcTimeoutMultiplier;
  }

  public void setListConnectorsRpcTimeoutMultiplier(Double listConnectorsRpcTimeoutMultiplier) {
    this.listConnectorsRpcTimeoutMultiplier = listConnectorsRpcTimeoutMultiplier;
  }

  public Duration getListConnectorsMaxRpcTimeout() {
    return this.listConnectorsMaxRpcTimeout;
  }

  public void setListConnectorsMaxRpcTimeout(java.time.Duration listConnectorsMaxRpcTimeout) {
    this.listConnectorsMaxRpcTimeout = Duration.parse(listConnectorsMaxRpcTimeout.toString());
  }

  public Duration getListConnectorsTotalTimeout() {
    return this.listConnectorsTotalTimeout;
  }

  public void setListConnectorsTotalTimeout(java.time.Duration listConnectorsTotalTimeout) {
    this.listConnectorsTotalTimeout = Duration.parse(listConnectorsTotalTimeout.toString());
  }

  public Duration getDeleteConnectorInitialRpcTimeout() {
    return this.deleteConnectorInitialRpcTimeout;
  }

  public void setDeleteConnectorInitialRpcTimeout(
      java.time.Duration deleteConnectorInitialRpcTimeout) {
    this.deleteConnectorInitialRpcTimeout =
        Duration.parse(deleteConnectorInitialRpcTimeout.toString());
  }

  public Double getDeleteConnectorRpcTimeoutMultiplier() {
    return this.deleteConnectorRpcTimeoutMultiplier;
  }

  public void setDeleteConnectorRpcTimeoutMultiplier(Double deleteConnectorRpcTimeoutMultiplier) {
    this.deleteConnectorRpcTimeoutMultiplier = deleteConnectorRpcTimeoutMultiplier;
  }

  public Duration getDeleteConnectorMaxRpcTimeout() {
    return this.deleteConnectorMaxRpcTimeout;
  }

  public void setDeleteConnectorMaxRpcTimeout(java.time.Duration deleteConnectorMaxRpcTimeout) {
    this.deleteConnectorMaxRpcTimeout = Duration.parse(deleteConnectorMaxRpcTimeout.toString());
  }

  public Duration getDeleteConnectorTotalTimeout() {
    return this.deleteConnectorTotalTimeout;
  }

  public void setDeleteConnectorTotalTimeout(java.time.Duration deleteConnectorTotalTimeout) {
    this.deleteConnectorTotalTimeout = Duration.parse(deleteConnectorTotalTimeout.toString());
  }

  public Duration getListLocationsInitialRetryDelay() {
    return this.listLocationsInitialRetryDelay;
  }

  public void setListLocationsInitialRetryDelay(java.time.Duration listLocationsInitialRetryDelay) {
    this.listLocationsInitialRetryDelay = Duration.parse(listLocationsInitialRetryDelay.toString());
  }

  public Double getListLocationsRetryDelayMultiplier() {
    return this.listLocationsRetryDelayMultiplier;
  }

  public void setListLocationsRetryDelayMultiplier(Double listLocationsRetryDelayMultiplier) {
    this.listLocationsRetryDelayMultiplier = listLocationsRetryDelayMultiplier;
  }

  public Duration getListLocationsMaxRetryDelay() {
    return this.listLocationsMaxRetryDelay;
  }

  public void setListLocationsMaxRetryDelay(java.time.Duration listLocationsMaxRetryDelay) {
    this.listLocationsMaxRetryDelay = Duration.parse(listLocationsMaxRetryDelay.toString());
  }

  public Duration getListLocationsInitialRpcTimeout() {
    return this.listLocationsInitialRpcTimeout;
  }

  public void setListLocationsInitialRpcTimeout(java.time.Duration listLocationsInitialRpcTimeout) {
    this.listLocationsInitialRpcTimeout = Duration.parse(listLocationsInitialRpcTimeout.toString());
  }

  public Double getListLocationsRpcTimeoutMultiplier() {
    return this.listLocationsRpcTimeoutMultiplier;
  }

  public void setListLocationsRpcTimeoutMultiplier(Double listLocationsRpcTimeoutMultiplier) {
    this.listLocationsRpcTimeoutMultiplier = listLocationsRpcTimeoutMultiplier;
  }

  public Duration getListLocationsMaxRpcTimeout() {
    return this.listLocationsMaxRpcTimeout;
  }

  public void setListLocationsMaxRpcTimeout(java.time.Duration listLocationsMaxRpcTimeout) {
    this.listLocationsMaxRpcTimeout = Duration.parse(listLocationsMaxRpcTimeout.toString());
  }

  public Duration getListLocationsTotalTimeout() {
    return this.listLocationsTotalTimeout;
  }

  public void setListLocationsTotalTimeout(java.time.Duration listLocationsTotalTimeout) {
    this.listLocationsTotalTimeout = Duration.parse(listLocationsTotalTimeout.toString());
  }
}
