/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.documentai.v1.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;
import org.threeten.bp.Duration;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for DocumentProcessorService client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.cloud.documentai.v1.spring.auto.document-processor-service")
public class DocumentProcessorServiceSpringProperties implements CredentialsSupplier {
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");

  private String quotaProjectId;
  private Integer executorThreadCount;
  private boolean useRest = false;
  private Duration processDocumentInitialRetryDelay;
  private Double processDocumentRetryDelayMultiplier;
  private Duration processDocumentMaxRetryDelay;
  private Duration processDocumentInitialRpcTimeout;
  private Double processDocumentRpcTimeoutMultiplier;
  private Duration processDocumentMaxRpcTimeout;
  private Duration processDocumentTotalTimeout;
  private Duration batchProcessDocumentsInitialRetryDelay;
  private Double batchProcessDocumentsRetryDelayMultiplier;
  private Duration batchProcessDocumentsMaxRetryDelay;
  private Duration batchProcessDocumentsInitialRpcTimeout;
  private Double batchProcessDocumentsRpcTimeoutMultiplier;
  private Duration batchProcessDocumentsMaxRpcTimeout;
  private Duration batchProcessDocumentsTotalTimeout;
  private Double fetchProcessorTypesRpcTimeoutMultiplier;
  private Double listProcessorTypesRpcTimeoutMultiplier;
  private Double listProcessorsRpcTimeoutMultiplier;
  private Double getProcessorRpcTimeoutMultiplier;
  private Double getProcessorVersionRpcTimeoutMultiplier;
  private Double listProcessorVersionsRpcTimeoutMultiplier;
  private Double deleteProcessorVersionRpcTimeoutMultiplier;
  private Double deployProcessorVersionRpcTimeoutMultiplier;
  private Double undeployProcessorVersionRpcTimeoutMultiplier;
  private Double createProcessorRpcTimeoutMultiplier;
  private Double deleteProcessorRpcTimeoutMultiplier;
  private Double enableProcessorRpcTimeoutMultiplier;
  private Double disableProcessorRpcTimeoutMultiplier;
  private Double setDefaultProcessorVersionRpcTimeoutMultiplier;
  private Duration reviewDocumentInitialRetryDelay;
  private Double reviewDocumentRetryDelayMultiplier;
  private Duration reviewDocumentMaxRetryDelay;
  private Duration reviewDocumentInitialRpcTimeout;
  private Double reviewDocumentRpcTimeoutMultiplier;
  private Duration reviewDocumentMaxRpcTimeout;
  private Duration reviewDocumentTotalTimeout;
  private Double listLocationsRpcTimeoutMultiplier;
  private Double getLocationRpcTimeoutMultiplier;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Duration getProcessDocumentInitialRetryDelay() {
    return this.processDocumentInitialRetryDelay;
  }

  public void setProcessDocumentInitialRetryDelay(
      java.time.Duration processDocumentInitialRetryDelay) {
    this.processDocumentInitialRetryDelay =
        Duration.parse(processDocumentInitialRetryDelay.toString());
  }

  public Double getProcessDocumentRetryDelayMultiplier() {
    return this.processDocumentRetryDelayMultiplier;
  }

  public void setProcessDocumentRetryDelayMultiplier(Double processDocumentRetryDelayMultiplier) {
    this.processDocumentRetryDelayMultiplier = processDocumentRetryDelayMultiplier;
  }

  public Duration getProcessDocumentMaxRetryDelay() {
    return this.processDocumentMaxRetryDelay;
  }

  public void setProcessDocumentMaxRetryDelay(java.time.Duration processDocumentMaxRetryDelay) {
    this.processDocumentMaxRetryDelay = Duration.parse(processDocumentMaxRetryDelay.toString());
  }

  public Duration getProcessDocumentInitialRpcTimeout() {
    return this.processDocumentInitialRpcTimeout;
  }

  public void setProcessDocumentInitialRpcTimeout(
      java.time.Duration processDocumentInitialRpcTimeout) {
    this.processDocumentInitialRpcTimeout =
        Duration.parse(processDocumentInitialRpcTimeout.toString());
  }

  public Double getProcessDocumentRpcTimeoutMultiplier() {
    return this.processDocumentRpcTimeoutMultiplier;
  }

  public void setProcessDocumentRpcTimeoutMultiplier(Double processDocumentRpcTimeoutMultiplier) {
    this.processDocumentRpcTimeoutMultiplier = processDocumentRpcTimeoutMultiplier;
  }

  public Duration getProcessDocumentMaxRpcTimeout() {
    return this.processDocumentMaxRpcTimeout;
  }

  public void setProcessDocumentMaxRpcTimeout(java.time.Duration processDocumentMaxRpcTimeout) {
    this.processDocumentMaxRpcTimeout = Duration.parse(processDocumentMaxRpcTimeout.toString());
  }

  public Duration getProcessDocumentTotalTimeout() {
    return this.processDocumentTotalTimeout;
  }

  public void setProcessDocumentTotalTimeout(java.time.Duration processDocumentTotalTimeout) {
    this.processDocumentTotalTimeout = Duration.parse(processDocumentTotalTimeout.toString());
  }

  public Duration getBatchProcessDocumentsInitialRetryDelay() {
    return this.batchProcessDocumentsInitialRetryDelay;
  }

  public void setBatchProcessDocumentsInitialRetryDelay(
      java.time.Duration batchProcessDocumentsInitialRetryDelay) {
    this.batchProcessDocumentsInitialRetryDelay =
        Duration.parse(batchProcessDocumentsInitialRetryDelay.toString());
  }

  public Double getBatchProcessDocumentsRetryDelayMultiplier() {
    return this.batchProcessDocumentsRetryDelayMultiplier;
  }

  public void setBatchProcessDocumentsRetryDelayMultiplier(
      Double batchProcessDocumentsRetryDelayMultiplier) {
    this.batchProcessDocumentsRetryDelayMultiplier = batchProcessDocumentsRetryDelayMultiplier;
  }

  public Duration getBatchProcessDocumentsMaxRetryDelay() {
    return this.batchProcessDocumentsMaxRetryDelay;
  }

  public void setBatchProcessDocumentsMaxRetryDelay(
      java.time.Duration batchProcessDocumentsMaxRetryDelay) {
    this.batchProcessDocumentsMaxRetryDelay =
        Duration.parse(batchProcessDocumentsMaxRetryDelay.toString());
  }

  public Duration getBatchProcessDocumentsInitialRpcTimeout() {
    return this.batchProcessDocumentsInitialRpcTimeout;
  }

  public void setBatchProcessDocumentsInitialRpcTimeout(
      java.time.Duration batchProcessDocumentsInitialRpcTimeout) {
    this.batchProcessDocumentsInitialRpcTimeout =
        Duration.parse(batchProcessDocumentsInitialRpcTimeout.toString());
  }

  public Double getBatchProcessDocumentsRpcTimeoutMultiplier() {
    return this.batchProcessDocumentsRpcTimeoutMultiplier;
  }

  public void setBatchProcessDocumentsRpcTimeoutMultiplier(
      Double batchProcessDocumentsRpcTimeoutMultiplier) {
    this.batchProcessDocumentsRpcTimeoutMultiplier = batchProcessDocumentsRpcTimeoutMultiplier;
  }

  public Duration getBatchProcessDocumentsMaxRpcTimeout() {
    return this.batchProcessDocumentsMaxRpcTimeout;
  }

  public void setBatchProcessDocumentsMaxRpcTimeout(
      java.time.Duration batchProcessDocumentsMaxRpcTimeout) {
    this.batchProcessDocumentsMaxRpcTimeout =
        Duration.parse(batchProcessDocumentsMaxRpcTimeout.toString());
  }

  public Duration getBatchProcessDocumentsTotalTimeout() {
    return this.batchProcessDocumentsTotalTimeout;
  }

  public void setBatchProcessDocumentsTotalTimeout(
      java.time.Duration batchProcessDocumentsTotalTimeout) {
    this.batchProcessDocumentsTotalTimeout =
        Duration.parse(batchProcessDocumentsTotalTimeout.toString());
  }

  public Double getFetchProcessorTypesRpcTimeoutMultiplier() {
    return this.fetchProcessorTypesRpcTimeoutMultiplier;
  }

  public void setFetchProcessorTypesRpcTimeoutMultiplier(
      Double fetchProcessorTypesRpcTimeoutMultiplier) {
    this.fetchProcessorTypesRpcTimeoutMultiplier = fetchProcessorTypesRpcTimeoutMultiplier;
  }

  public Double getListProcessorTypesRpcTimeoutMultiplier() {
    return this.listProcessorTypesRpcTimeoutMultiplier;
  }

  public void setListProcessorTypesRpcTimeoutMultiplier(
      Double listProcessorTypesRpcTimeoutMultiplier) {
    this.listProcessorTypesRpcTimeoutMultiplier = listProcessorTypesRpcTimeoutMultiplier;
  }

  public Double getListProcessorsRpcTimeoutMultiplier() {
    return this.listProcessorsRpcTimeoutMultiplier;
  }

  public void setListProcessorsRpcTimeoutMultiplier(Double listProcessorsRpcTimeoutMultiplier) {
    this.listProcessorsRpcTimeoutMultiplier = listProcessorsRpcTimeoutMultiplier;
  }

  public Double getGetProcessorRpcTimeoutMultiplier() {
    return this.getProcessorRpcTimeoutMultiplier;
  }

  public void setGetProcessorRpcTimeoutMultiplier(Double getProcessorRpcTimeoutMultiplier) {
    this.getProcessorRpcTimeoutMultiplier = getProcessorRpcTimeoutMultiplier;
  }

  public Double getGetProcessorVersionRpcTimeoutMultiplier() {
    return this.getProcessorVersionRpcTimeoutMultiplier;
  }

  public void setGetProcessorVersionRpcTimeoutMultiplier(
      Double getProcessorVersionRpcTimeoutMultiplier) {
    this.getProcessorVersionRpcTimeoutMultiplier = getProcessorVersionRpcTimeoutMultiplier;
  }

  public Double getListProcessorVersionsRpcTimeoutMultiplier() {
    return this.listProcessorVersionsRpcTimeoutMultiplier;
  }

  public void setListProcessorVersionsRpcTimeoutMultiplier(
      Double listProcessorVersionsRpcTimeoutMultiplier) {
    this.listProcessorVersionsRpcTimeoutMultiplier = listProcessorVersionsRpcTimeoutMultiplier;
  }

  public Double getDeleteProcessorVersionRpcTimeoutMultiplier() {
    return this.deleteProcessorVersionRpcTimeoutMultiplier;
  }

  public void setDeleteProcessorVersionRpcTimeoutMultiplier(
      Double deleteProcessorVersionRpcTimeoutMultiplier) {
    this.deleteProcessorVersionRpcTimeoutMultiplier = deleteProcessorVersionRpcTimeoutMultiplier;
  }

  public Double getDeployProcessorVersionRpcTimeoutMultiplier() {
    return this.deployProcessorVersionRpcTimeoutMultiplier;
  }

  public void setDeployProcessorVersionRpcTimeoutMultiplier(
      Double deployProcessorVersionRpcTimeoutMultiplier) {
    this.deployProcessorVersionRpcTimeoutMultiplier = deployProcessorVersionRpcTimeoutMultiplier;
  }

  public Double getUndeployProcessorVersionRpcTimeoutMultiplier() {
    return this.undeployProcessorVersionRpcTimeoutMultiplier;
  }

  public void setUndeployProcessorVersionRpcTimeoutMultiplier(
      Double undeployProcessorVersionRpcTimeoutMultiplier) {
    this.undeployProcessorVersionRpcTimeoutMultiplier =
        undeployProcessorVersionRpcTimeoutMultiplier;
  }

  public Double getCreateProcessorRpcTimeoutMultiplier() {
    return this.createProcessorRpcTimeoutMultiplier;
  }

  public void setCreateProcessorRpcTimeoutMultiplier(Double createProcessorRpcTimeoutMultiplier) {
    this.createProcessorRpcTimeoutMultiplier = createProcessorRpcTimeoutMultiplier;
  }

  public Double getDeleteProcessorRpcTimeoutMultiplier() {
    return this.deleteProcessorRpcTimeoutMultiplier;
  }

  public void setDeleteProcessorRpcTimeoutMultiplier(Double deleteProcessorRpcTimeoutMultiplier) {
    this.deleteProcessorRpcTimeoutMultiplier = deleteProcessorRpcTimeoutMultiplier;
  }

  public Double getEnableProcessorRpcTimeoutMultiplier() {
    return this.enableProcessorRpcTimeoutMultiplier;
  }

  public void setEnableProcessorRpcTimeoutMultiplier(Double enableProcessorRpcTimeoutMultiplier) {
    this.enableProcessorRpcTimeoutMultiplier = enableProcessorRpcTimeoutMultiplier;
  }

  public Double getDisableProcessorRpcTimeoutMultiplier() {
    return this.disableProcessorRpcTimeoutMultiplier;
  }

  public void setDisableProcessorRpcTimeoutMultiplier(Double disableProcessorRpcTimeoutMultiplier) {
    this.disableProcessorRpcTimeoutMultiplier = disableProcessorRpcTimeoutMultiplier;
  }

  public Double getSetDefaultProcessorVersionRpcTimeoutMultiplier() {
    return this.setDefaultProcessorVersionRpcTimeoutMultiplier;
  }

  public void setSetDefaultProcessorVersionRpcTimeoutMultiplier(
      Double setDefaultProcessorVersionRpcTimeoutMultiplier) {
    this.setDefaultProcessorVersionRpcTimeoutMultiplier =
        setDefaultProcessorVersionRpcTimeoutMultiplier;
  }

  public Duration getReviewDocumentInitialRetryDelay() {
    return this.reviewDocumentInitialRetryDelay;
  }

  public void setReviewDocumentInitialRetryDelay(
      java.time.Duration reviewDocumentInitialRetryDelay) {
    this.reviewDocumentInitialRetryDelay =
        Duration.parse(reviewDocumentInitialRetryDelay.toString());
  }

  public Double getReviewDocumentRetryDelayMultiplier() {
    return this.reviewDocumentRetryDelayMultiplier;
  }

  public void setReviewDocumentRetryDelayMultiplier(Double reviewDocumentRetryDelayMultiplier) {
    this.reviewDocumentRetryDelayMultiplier = reviewDocumentRetryDelayMultiplier;
  }

  public Duration getReviewDocumentMaxRetryDelay() {
    return this.reviewDocumentMaxRetryDelay;
  }

  public void setReviewDocumentMaxRetryDelay(java.time.Duration reviewDocumentMaxRetryDelay) {
    this.reviewDocumentMaxRetryDelay = Duration.parse(reviewDocumentMaxRetryDelay.toString());
  }

  public Duration getReviewDocumentInitialRpcTimeout() {
    return this.reviewDocumentInitialRpcTimeout;
  }

  public void setReviewDocumentInitialRpcTimeout(
      java.time.Duration reviewDocumentInitialRpcTimeout) {
    this.reviewDocumentInitialRpcTimeout =
        Duration.parse(reviewDocumentInitialRpcTimeout.toString());
  }

  public Double getReviewDocumentRpcTimeoutMultiplier() {
    return this.reviewDocumentRpcTimeoutMultiplier;
  }

  public void setReviewDocumentRpcTimeoutMultiplier(Double reviewDocumentRpcTimeoutMultiplier) {
    this.reviewDocumentRpcTimeoutMultiplier = reviewDocumentRpcTimeoutMultiplier;
  }

  public Duration getReviewDocumentMaxRpcTimeout() {
    return this.reviewDocumentMaxRpcTimeout;
  }

  public void setReviewDocumentMaxRpcTimeout(java.time.Duration reviewDocumentMaxRpcTimeout) {
    this.reviewDocumentMaxRpcTimeout = Duration.parse(reviewDocumentMaxRpcTimeout.toString());
  }

  public Duration getReviewDocumentTotalTimeout() {
    return this.reviewDocumentTotalTimeout;
  }

  public void setReviewDocumentTotalTimeout(java.time.Duration reviewDocumentTotalTimeout) {
    this.reviewDocumentTotalTimeout = Duration.parse(reviewDocumentTotalTimeout.toString());
  }

  public Double getListLocationsRpcTimeoutMultiplier() {
    return this.listLocationsRpcTimeoutMultiplier;
  }

  public void setListLocationsRpcTimeoutMultiplier(Double listLocationsRpcTimeoutMultiplier) {
    this.listLocationsRpcTimeoutMultiplier = listLocationsRpcTimeoutMultiplier;
  }

  public Double getGetLocationRpcTimeoutMultiplier() {
    return this.getLocationRpcTimeoutMultiplier;
  }

  public void setGetLocationRpcTimeoutMultiplier(Double getLocationRpcTimeoutMultiplier) {
    this.getLocationRpcTimeoutMultiplier = getLocationRpcTimeoutMultiplier;
  }
}
