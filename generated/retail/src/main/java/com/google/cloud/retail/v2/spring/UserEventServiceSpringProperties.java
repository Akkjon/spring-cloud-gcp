/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.retail.v2.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;
import org.threeten.bp.Duration;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for UserEventService client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.cloud.retail.v2.spring.auto.user-event-service")
public class UserEventServiceSpringProperties implements CredentialsSupplier {
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials("https://www.googleapis.com/auth/cloud-platform");

  private String quotaProjectId;
  private Integer executorThreadCount;
  private boolean useRest = false;
  private Duration writeUserEventInitialRetryDelay;
  private Double writeUserEventRetryDelayMultiplier;
  private Duration writeUserEventMaxRetryDelay;
  private Duration writeUserEventInitialRpcTimeout;
  private Double writeUserEventRpcTimeoutMultiplier;
  private Duration writeUserEventMaxRpcTimeout;
  private Duration writeUserEventTotalTimeout;
  private Duration collectUserEventInitialRetryDelay;
  private Double collectUserEventRetryDelayMultiplier;
  private Duration collectUserEventMaxRetryDelay;
  private Duration collectUserEventInitialRpcTimeout;
  private Double collectUserEventRpcTimeoutMultiplier;
  private Duration collectUserEventMaxRpcTimeout;
  private Duration collectUserEventTotalTimeout;
  private Duration purgeUserEventsInitialRetryDelay;
  private Double purgeUserEventsRetryDelayMultiplier;
  private Duration purgeUserEventsMaxRetryDelay;
  private Duration purgeUserEventsInitialRpcTimeout;
  private Double purgeUserEventsRpcTimeoutMultiplier;
  private Duration purgeUserEventsMaxRpcTimeout;
  private Duration purgeUserEventsTotalTimeout;
  private Duration importUserEventsInitialRetryDelay;
  private Double importUserEventsRetryDelayMultiplier;
  private Duration importUserEventsMaxRetryDelay;
  private Duration importUserEventsInitialRpcTimeout;
  private Double importUserEventsRpcTimeoutMultiplier;
  private Duration importUserEventsMaxRpcTimeout;
  private Duration importUserEventsTotalTimeout;
  private Duration rejoinUserEventsInitialRetryDelay;
  private Double rejoinUserEventsRetryDelayMultiplier;
  private Duration rejoinUserEventsMaxRetryDelay;
  private Duration rejoinUserEventsInitialRpcTimeout;
  private Double rejoinUserEventsRpcTimeoutMultiplier;
  private Duration rejoinUserEventsMaxRpcTimeout;
  private Duration rejoinUserEventsTotalTimeout;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Duration getWriteUserEventInitialRetryDelay() {
    return this.writeUserEventInitialRetryDelay;
  }

  public void setWriteUserEventInitialRetryDelay(
      java.time.Duration writeUserEventInitialRetryDelay) {
    this.writeUserEventInitialRetryDelay =
        Duration.parse(writeUserEventInitialRetryDelay.toString());
  }

  public Double getWriteUserEventRetryDelayMultiplier() {
    return this.writeUserEventRetryDelayMultiplier;
  }

  public void setWriteUserEventRetryDelayMultiplier(Double writeUserEventRetryDelayMultiplier) {
    this.writeUserEventRetryDelayMultiplier = writeUserEventRetryDelayMultiplier;
  }

  public Duration getWriteUserEventMaxRetryDelay() {
    return this.writeUserEventMaxRetryDelay;
  }

  public void setWriteUserEventMaxRetryDelay(java.time.Duration writeUserEventMaxRetryDelay) {
    this.writeUserEventMaxRetryDelay = Duration.parse(writeUserEventMaxRetryDelay.toString());
  }

  public Duration getWriteUserEventInitialRpcTimeout() {
    return this.writeUserEventInitialRpcTimeout;
  }

  public void setWriteUserEventInitialRpcTimeout(
      java.time.Duration writeUserEventInitialRpcTimeout) {
    this.writeUserEventInitialRpcTimeout =
        Duration.parse(writeUserEventInitialRpcTimeout.toString());
  }

  public Double getWriteUserEventRpcTimeoutMultiplier() {
    return this.writeUserEventRpcTimeoutMultiplier;
  }

  public void setWriteUserEventRpcTimeoutMultiplier(Double writeUserEventRpcTimeoutMultiplier) {
    this.writeUserEventRpcTimeoutMultiplier = writeUserEventRpcTimeoutMultiplier;
  }

  public Duration getWriteUserEventMaxRpcTimeout() {
    return this.writeUserEventMaxRpcTimeout;
  }

  public void setWriteUserEventMaxRpcTimeout(java.time.Duration writeUserEventMaxRpcTimeout) {
    this.writeUserEventMaxRpcTimeout = Duration.parse(writeUserEventMaxRpcTimeout.toString());
  }

  public Duration getWriteUserEventTotalTimeout() {
    return this.writeUserEventTotalTimeout;
  }

  public void setWriteUserEventTotalTimeout(java.time.Duration writeUserEventTotalTimeout) {
    this.writeUserEventTotalTimeout = Duration.parse(writeUserEventTotalTimeout.toString());
  }

  public Duration getCollectUserEventInitialRetryDelay() {
    return this.collectUserEventInitialRetryDelay;
  }

  public void setCollectUserEventInitialRetryDelay(
      java.time.Duration collectUserEventInitialRetryDelay) {
    this.collectUserEventInitialRetryDelay =
        Duration.parse(collectUserEventInitialRetryDelay.toString());
  }

  public Double getCollectUserEventRetryDelayMultiplier() {
    return this.collectUserEventRetryDelayMultiplier;
  }

  public void setCollectUserEventRetryDelayMultiplier(Double collectUserEventRetryDelayMultiplier) {
    this.collectUserEventRetryDelayMultiplier = collectUserEventRetryDelayMultiplier;
  }

  public Duration getCollectUserEventMaxRetryDelay() {
    return this.collectUserEventMaxRetryDelay;
  }

  public void setCollectUserEventMaxRetryDelay(java.time.Duration collectUserEventMaxRetryDelay) {
    this.collectUserEventMaxRetryDelay = Duration.parse(collectUserEventMaxRetryDelay.toString());
  }

  public Duration getCollectUserEventInitialRpcTimeout() {
    return this.collectUserEventInitialRpcTimeout;
  }

  public void setCollectUserEventInitialRpcTimeout(
      java.time.Duration collectUserEventInitialRpcTimeout) {
    this.collectUserEventInitialRpcTimeout =
        Duration.parse(collectUserEventInitialRpcTimeout.toString());
  }

  public Double getCollectUserEventRpcTimeoutMultiplier() {
    return this.collectUserEventRpcTimeoutMultiplier;
  }

  public void setCollectUserEventRpcTimeoutMultiplier(Double collectUserEventRpcTimeoutMultiplier) {
    this.collectUserEventRpcTimeoutMultiplier = collectUserEventRpcTimeoutMultiplier;
  }

  public Duration getCollectUserEventMaxRpcTimeout() {
    return this.collectUserEventMaxRpcTimeout;
  }

  public void setCollectUserEventMaxRpcTimeout(java.time.Duration collectUserEventMaxRpcTimeout) {
    this.collectUserEventMaxRpcTimeout = Duration.parse(collectUserEventMaxRpcTimeout.toString());
  }

  public Duration getCollectUserEventTotalTimeout() {
    return this.collectUserEventTotalTimeout;
  }

  public void setCollectUserEventTotalTimeout(java.time.Duration collectUserEventTotalTimeout) {
    this.collectUserEventTotalTimeout = Duration.parse(collectUserEventTotalTimeout.toString());
  }

  public Duration getPurgeUserEventsInitialRetryDelay() {
    return this.purgeUserEventsInitialRetryDelay;
  }

  public void setPurgeUserEventsInitialRetryDelay(
      java.time.Duration purgeUserEventsInitialRetryDelay) {
    this.purgeUserEventsInitialRetryDelay =
        Duration.parse(purgeUserEventsInitialRetryDelay.toString());
  }

  public Double getPurgeUserEventsRetryDelayMultiplier() {
    return this.purgeUserEventsRetryDelayMultiplier;
  }

  public void setPurgeUserEventsRetryDelayMultiplier(Double purgeUserEventsRetryDelayMultiplier) {
    this.purgeUserEventsRetryDelayMultiplier = purgeUserEventsRetryDelayMultiplier;
  }

  public Duration getPurgeUserEventsMaxRetryDelay() {
    return this.purgeUserEventsMaxRetryDelay;
  }

  public void setPurgeUserEventsMaxRetryDelay(java.time.Duration purgeUserEventsMaxRetryDelay) {
    this.purgeUserEventsMaxRetryDelay = Duration.parse(purgeUserEventsMaxRetryDelay.toString());
  }

  public Duration getPurgeUserEventsInitialRpcTimeout() {
    return this.purgeUserEventsInitialRpcTimeout;
  }

  public void setPurgeUserEventsInitialRpcTimeout(
      java.time.Duration purgeUserEventsInitialRpcTimeout) {
    this.purgeUserEventsInitialRpcTimeout =
        Duration.parse(purgeUserEventsInitialRpcTimeout.toString());
  }

  public Double getPurgeUserEventsRpcTimeoutMultiplier() {
    return this.purgeUserEventsRpcTimeoutMultiplier;
  }

  public void setPurgeUserEventsRpcTimeoutMultiplier(Double purgeUserEventsRpcTimeoutMultiplier) {
    this.purgeUserEventsRpcTimeoutMultiplier = purgeUserEventsRpcTimeoutMultiplier;
  }

  public Duration getPurgeUserEventsMaxRpcTimeout() {
    return this.purgeUserEventsMaxRpcTimeout;
  }

  public void setPurgeUserEventsMaxRpcTimeout(java.time.Duration purgeUserEventsMaxRpcTimeout) {
    this.purgeUserEventsMaxRpcTimeout = Duration.parse(purgeUserEventsMaxRpcTimeout.toString());
  }

  public Duration getPurgeUserEventsTotalTimeout() {
    return this.purgeUserEventsTotalTimeout;
  }

  public void setPurgeUserEventsTotalTimeout(java.time.Duration purgeUserEventsTotalTimeout) {
    this.purgeUserEventsTotalTimeout = Duration.parse(purgeUserEventsTotalTimeout.toString());
  }

  public Duration getImportUserEventsInitialRetryDelay() {
    return this.importUserEventsInitialRetryDelay;
  }

  public void setImportUserEventsInitialRetryDelay(
      java.time.Duration importUserEventsInitialRetryDelay) {
    this.importUserEventsInitialRetryDelay =
        Duration.parse(importUserEventsInitialRetryDelay.toString());
  }

  public Double getImportUserEventsRetryDelayMultiplier() {
    return this.importUserEventsRetryDelayMultiplier;
  }

  public void setImportUserEventsRetryDelayMultiplier(Double importUserEventsRetryDelayMultiplier) {
    this.importUserEventsRetryDelayMultiplier = importUserEventsRetryDelayMultiplier;
  }

  public Duration getImportUserEventsMaxRetryDelay() {
    return this.importUserEventsMaxRetryDelay;
  }

  public void setImportUserEventsMaxRetryDelay(java.time.Duration importUserEventsMaxRetryDelay) {
    this.importUserEventsMaxRetryDelay = Duration.parse(importUserEventsMaxRetryDelay.toString());
  }

  public Duration getImportUserEventsInitialRpcTimeout() {
    return this.importUserEventsInitialRpcTimeout;
  }

  public void setImportUserEventsInitialRpcTimeout(
      java.time.Duration importUserEventsInitialRpcTimeout) {
    this.importUserEventsInitialRpcTimeout =
        Duration.parse(importUserEventsInitialRpcTimeout.toString());
  }

  public Double getImportUserEventsRpcTimeoutMultiplier() {
    return this.importUserEventsRpcTimeoutMultiplier;
  }

  public void setImportUserEventsRpcTimeoutMultiplier(Double importUserEventsRpcTimeoutMultiplier) {
    this.importUserEventsRpcTimeoutMultiplier = importUserEventsRpcTimeoutMultiplier;
  }

  public Duration getImportUserEventsMaxRpcTimeout() {
    return this.importUserEventsMaxRpcTimeout;
  }

  public void setImportUserEventsMaxRpcTimeout(java.time.Duration importUserEventsMaxRpcTimeout) {
    this.importUserEventsMaxRpcTimeout = Duration.parse(importUserEventsMaxRpcTimeout.toString());
  }

  public Duration getImportUserEventsTotalTimeout() {
    return this.importUserEventsTotalTimeout;
  }

  public void setImportUserEventsTotalTimeout(java.time.Duration importUserEventsTotalTimeout) {
    this.importUserEventsTotalTimeout = Duration.parse(importUserEventsTotalTimeout.toString());
  }

  public Duration getRejoinUserEventsInitialRetryDelay() {
    return this.rejoinUserEventsInitialRetryDelay;
  }

  public void setRejoinUserEventsInitialRetryDelay(
      java.time.Duration rejoinUserEventsInitialRetryDelay) {
    this.rejoinUserEventsInitialRetryDelay =
        Duration.parse(rejoinUserEventsInitialRetryDelay.toString());
  }

  public Double getRejoinUserEventsRetryDelayMultiplier() {
    return this.rejoinUserEventsRetryDelayMultiplier;
  }

  public void setRejoinUserEventsRetryDelayMultiplier(Double rejoinUserEventsRetryDelayMultiplier) {
    this.rejoinUserEventsRetryDelayMultiplier = rejoinUserEventsRetryDelayMultiplier;
  }

  public Duration getRejoinUserEventsMaxRetryDelay() {
    return this.rejoinUserEventsMaxRetryDelay;
  }

  public void setRejoinUserEventsMaxRetryDelay(java.time.Duration rejoinUserEventsMaxRetryDelay) {
    this.rejoinUserEventsMaxRetryDelay = Duration.parse(rejoinUserEventsMaxRetryDelay.toString());
  }

  public Duration getRejoinUserEventsInitialRpcTimeout() {
    return this.rejoinUserEventsInitialRpcTimeout;
  }

  public void setRejoinUserEventsInitialRpcTimeout(
      java.time.Duration rejoinUserEventsInitialRpcTimeout) {
    this.rejoinUserEventsInitialRpcTimeout =
        Duration.parse(rejoinUserEventsInitialRpcTimeout.toString());
  }

  public Double getRejoinUserEventsRpcTimeoutMultiplier() {
    return this.rejoinUserEventsRpcTimeoutMultiplier;
  }

  public void setRejoinUserEventsRpcTimeoutMultiplier(Double rejoinUserEventsRpcTimeoutMultiplier) {
    this.rejoinUserEventsRpcTimeoutMultiplier = rejoinUserEventsRpcTimeoutMultiplier;
  }

  public Duration getRejoinUserEventsMaxRpcTimeout() {
    return this.rejoinUserEventsMaxRpcTimeout;
  }

  public void setRejoinUserEventsMaxRpcTimeout(java.time.Duration rejoinUserEventsMaxRpcTimeout) {
    this.rejoinUserEventsMaxRpcTimeout = Duration.parse(rejoinUserEventsMaxRpcTimeout.toString());
  }

  public Duration getRejoinUserEventsTotalTimeout() {
    return this.rejoinUserEventsTotalTimeout;
  }

  public void setRejoinUserEventsTotalTimeout(java.time.Duration rejoinUserEventsTotalTimeout) {
    this.rejoinUserEventsTotalTimeout = Duration.parse(rejoinUserEventsTotalTimeout.toString());
  }
}
