/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.cloud.debugger.v2.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;
import org.threeten.bp.Duration;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for Controller2 client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.cloud.debugger.v2.spring.auto.controller2")
public class Controller2SpringProperties implements CredentialsSupplier {
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials(
          "https://www.googleapis.com/auth/cloud-platform",
          "https://www.googleapis.com/auth/cloud_debugger");

  private String quotaProjectId;
  private Integer executorThreadCount;
  private boolean useRest = false;
  private Duration registerDebuggeeInitialRpcTimeout;
  private Double registerDebuggeeRpcTimeoutMultiplier;
  private Duration registerDebuggeeMaxRpcTimeout;
  private Duration registerDebuggeeTotalTimeout;
  private Duration listActiveBreakpointsInitialRetryDelay;
  private Double listActiveBreakpointsRetryDelayMultiplier;
  private Duration listActiveBreakpointsMaxRetryDelay;
  private Duration listActiveBreakpointsInitialRpcTimeout;
  private Double listActiveBreakpointsRpcTimeoutMultiplier;
  private Duration listActiveBreakpointsMaxRpcTimeout;
  private Duration listActiveBreakpointsTotalTimeout;
  private Duration updateActiveBreakpointInitialRetryDelay;
  private Double updateActiveBreakpointRetryDelayMultiplier;
  private Duration updateActiveBreakpointMaxRetryDelay;
  private Duration updateActiveBreakpointInitialRpcTimeout;
  private Double updateActiveBreakpointRpcTimeoutMultiplier;
  private Duration updateActiveBreakpointMaxRpcTimeout;
  private Duration updateActiveBreakpointTotalTimeout;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Duration getRegisterDebuggeeInitialRpcTimeout() {
    return this.registerDebuggeeInitialRpcTimeout;
  }

  public void setRegisterDebuggeeInitialRpcTimeout(
      java.time.Duration registerDebuggeeInitialRpcTimeout) {
    this.registerDebuggeeInitialRpcTimeout =
        Duration.parse(registerDebuggeeInitialRpcTimeout.toString());
  }

  public Double getRegisterDebuggeeRpcTimeoutMultiplier() {
    return this.registerDebuggeeRpcTimeoutMultiplier;
  }

  public void setRegisterDebuggeeRpcTimeoutMultiplier(Double registerDebuggeeRpcTimeoutMultiplier) {
    this.registerDebuggeeRpcTimeoutMultiplier = registerDebuggeeRpcTimeoutMultiplier;
  }

  public Duration getRegisterDebuggeeMaxRpcTimeout() {
    return this.registerDebuggeeMaxRpcTimeout;
  }

  public void setRegisterDebuggeeMaxRpcTimeout(java.time.Duration registerDebuggeeMaxRpcTimeout) {
    this.registerDebuggeeMaxRpcTimeout = Duration.parse(registerDebuggeeMaxRpcTimeout.toString());
  }

  public Duration getRegisterDebuggeeTotalTimeout() {
    return this.registerDebuggeeTotalTimeout;
  }

  public void setRegisterDebuggeeTotalTimeout(java.time.Duration registerDebuggeeTotalTimeout) {
    this.registerDebuggeeTotalTimeout = Duration.parse(registerDebuggeeTotalTimeout.toString());
  }

  public Duration getListActiveBreakpointsInitialRetryDelay() {
    return this.listActiveBreakpointsInitialRetryDelay;
  }

  public void setListActiveBreakpointsInitialRetryDelay(
      java.time.Duration listActiveBreakpointsInitialRetryDelay) {
    this.listActiveBreakpointsInitialRetryDelay =
        Duration.parse(listActiveBreakpointsInitialRetryDelay.toString());
  }

  public Double getListActiveBreakpointsRetryDelayMultiplier() {
    return this.listActiveBreakpointsRetryDelayMultiplier;
  }

  public void setListActiveBreakpointsRetryDelayMultiplier(
      Double listActiveBreakpointsRetryDelayMultiplier) {
    this.listActiveBreakpointsRetryDelayMultiplier = listActiveBreakpointsRetryDelayMultiplier;
  }

  public Duration getListActiveBreakpointsMaxRetryDelay() {
    return this.listActiveBreakpointsMaxRetryDelay;
  }

  public void setListActiveBreakpointsMaxRetryDelay(
      java.time.Duration listActiveBreakpointsMaxRetryDelay) {
    this.listActiveBreakpointsMaxRetryDelay =
        Duration.parse(listActiveBreakpointsMaxRetryDelay.toString());
  }

  public Duration getListActiveBreakpointsInitialRpcTimeout() {
    return this.listActiveBreakpointsInitialRpcTimeout;
  }

  public void setListActiveBreakpointsInitialRpcTimeout(
      java.time.Duration listActiveBreakpointsInitialRpcTimeout) {
    this.listActiveBreakpointsInitialRpcTimeout =
        Duration.parse(listActiveBreakpointsInitialRpcTimeout.toString());
  }

  public Double getListActiveBreakpointsRpcTimeoutMultiplier() {
    return this.listActiveBreakpointsRpcTimeoutMultiplier;
  }

  public void setListActiveBreakpointsRpcTimeoutMultiplier(
      Double listActiveBreakpointsRpcTimeoutMultiplier) {
    this.listActiveBreakpointsRpcTimeoutMultiplier = listActiveBreakpointsRpcTimeoutMultiplier;
  }

  public Duration getListActiveBreakpointsMaxRpcTimeout() {
    return this.listActiveBreakpointsMaxRpcTimeout;
  }

  public void setListActiveBreakpointsMaxRpcTimeout(
      java.time.Duration listActiveBreakpointsMaxRpcTimeout) {
    this.listActiveBreakpointsMaxRpcTimeout =
        Duration.parse(listActiveBreakpointsMaxRpcTimeout.toString());
  }

  public Duration getListActiveBreakpointsTotalTimeout() {
    return this.listActiveBreakpointsTotalTimeout;
  }

  public void setListActiveBreakpointsTotalTimeout(
      java.time.Duration listActiveBreakpointsTotalTimeout) {
    this.listActiveBreakpointsTotalTimeout =
        Duration.parse(listActiveBreakpointsTotalTimeout.toString());
  }

  public Duration getUpdateActiveBreakpointInitialRetryDelay() {
    return this.updateActiveBreakpointInitialRetryDelay;
  }

  public void setUpdateActiveBreakpointInitialRetryDelay(
      java.time.Duration updateActiveBreakpointInitialRetryDelay) {
    this.updateActiveBreakpointInitialRetryDelay =
        Duration.parse(updateActiveBreakpointInitialRetryDelay.toString());
  }

  public Double getUpdateActiveBreakpointRetryDelayMultiplier() {
    return this.updateActiveBreakpointRetryDelayMultiplier;
  }

  public void setUpdateActiveBreakpointRetryDelayMultiplier(
      Double updateActiveBreakpointRetryDelayMultiplier) {
    this.updateActiveBreakpointRetryDelayMultiplier = updateActiveBreakpointRetryDelayMultiplier;
  }

  public Duration getUpdateActiveBreakpointMaxRetryDelay() {
    return this.updateActiveBreakpointMaxRetryDelay;
  }

  public void setUpdateActiveBreakpointMaxRetryDelay(
      java.time.Duration updateActiveBreakpointMaxRetryDelay) {
    this.updateActiveBreakpointMaxRetryDelay =
        Duration.parse(updateActiveBreakpointMaxRetryDelay.toString());
  }

  public Duration getUpdateActiveBreakpointInitialRpcTimeout() {
    return this.updateActiveBreakpointInitialRpcTimeout;
  }

  public void setUpdateActiveBreakpointInitialRpcTimeout(
      java.time.Duration updateActiveBreakpointInitialRpcTimeout) {
    this.updateActiveBreakpointInitialRpcTimeout =
        Duration.parse(updateActiveBreakpointInitialRpcTimeout.toString());
  }

  public Double getUpdateActiveBreakpointRpcTimeoutMultiplier() {
    return this.updateActiveBreakpointRpcTimeoutMultiplier;
  }

  public void setUpdateActiveBreakpointRpcTimeoutMultiplier(
      Double updateActiveBreakpointRpcTimeoutMultiplier) {
    this.updateActiveBreakpointRpcTimeoutMultiplier = updateActiveBreakpointRpcTimeoutMultiplier;
  }

  public Duration getUpdateActiveBreakpointMaxRpcTimeout() {
    return this.updateActiveBreakpointMaxRpcTimeout;
  }

  public void setUpdateActiveBreakpointMaxRpcTimeout(
      java.time.Duration updateActiveBreakpointMaxRpcTimeout) {
    this.updateActiveBreakpointMaxRpcTimeout =
        Duration.parse(updateActiveBreakpointMaxRpcTimeout.toString());
  }

  public Duration getUpdateActiveBreakpointTotalTimeout() {
    return this.updateActiveBreakpointTotalTimeout;
  }

  public void setUpdateActiveBreakpointTotalTimeout(
      java.time.Duration updateActiveBreakpointTotalTimeout) {
    this.updateActiveBreakpointTotalTimeout =
        Duration.parse(updateActiveBreakpointTotalTimeout.toString());
  }
}
