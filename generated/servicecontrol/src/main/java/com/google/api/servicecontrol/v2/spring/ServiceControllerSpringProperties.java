/*
 * Copyright 2022 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.api.servicecontrol.v2.spring;

import com.google.api.core.BetaApi;
import com.google.cloud.spring.core.Credentials;
import com.google.cloud.spring.core.CredentialsSupplier;
import javax.annotation.Generated;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.context.properties.NestedConfigurationProperty;
import org.threeten.bp.Duration;

// AUTO-GENERATED DOCUMENTATION AND CLASS.
/** Provides default property values for ServiceController client bean */
@Generated("by google-cloud-spring-generator")
@BetaApi("Autogenerated Spring autoconfiguration is not yet stable")
@ConfigurationProperties("com.google.api.servicecontrol.v2.spring.auto.service-controller")
public class ServiceControllerSpringProperties implements CredentialsSupplier {
  @NestedConfigurationProperty
  private final Credentials credentials =
      new Credentials(
          "https://www.googleapis.com/auth/cloud-platform",
          "https://www.googleapis.com/auth/servicecontrol");

  private String quotaProjectId;
  private Integer executorThreadCount;
  private boolean useRest = false;
  private Duration checkInitialRetryDelay;
  private Double checkRetryDelayMultiplier;
  private Duration checkMaxRetryDelay;
  private Duration checkInitialRpcTimeout;
  private Double checkRpcTimeoutMultiplier;
  private Duration checkMaxRpcTimeout;
  private Duration checkTotalTimeout;
  private Double reportRpcTimeoutMultiplier;

  @Override
  public Credentials getCredentials() {
    return this.credentials;
  }

  public String getQuotaProjectId() {
    return this.quotaProjectId;
  }

  public void setQuotaProjectId(String quotaProjectId) {
    this.quotaProjectId = quotaProjectId;
  }

  public boolean getUseRest() {
    return this.useRest;
  }

  public void setUseRest(boolean useRest) {
    this.useRest = useRest;
  }

  public Integer getExecutorThreadCount() {
    return this.executorThreadCount;
  }

  public void setExecutorThreadCount(Integer executorThreadCount) {
    this.executorThreadCount = executorThreadCount;
  }

  public Duration getCheckInitialRetryDelay() {
    return this.checkInitialRetryDelay;
  }

  public void setCheckInitialRetryDelay(java.time.Duration checkInitialRetryDelay) {
    this.checkInitialRetryDelay = Duration.parse(checkInitialRetryDelay.toString());
  }

  public Double getCheckRetryDelayMultiplier() {
    return this.checkRetryDelayMultiplier;
  }

  public void setCheckRetryDelayMultiplier(Double checkRetryDelayMultiplier) {
    this.checkRetryDelayMultiplier = checkRetryDelayMultiplier;
  }

  public Duration getCheckMaxRetryDelay() {
    return this.checkMaxRetryDelay;
  }

  public void setCheckMaxRetryDelay(java.time.Duration checkMaxRetryDelay) {
    this.checkMaxRetryDelay = Duration.parse(checkMaxRetryDelay.toString());
  }

  public Duration getCheckInitialRpcTimeout() {
    return this.checkInitialRpcTimeout;
  }

  public void setCheckInitialRpcTimeout(java.time.Duration checkInitialRpcTimeout) {
    this.checkInitialRpcTimeout = Duration.parse(checkInitialRpcTimeout.toString());
  }

  public Double getCheckRpcTimeoutMultiplier() {
    return this.checkRpcTimeoutMultiplier;
  }

  public void setCheckRpcTimeoutMultiplier(Double checkRpcTimeoutMultiplier) {
    this.checkRpcTimeoutMultiplier = checkRpcTimeoutMultiplier;
  }

  public Duration getCheckMaxRpcTimeout() {
    return this.checkMaxRpcTimeout;
  }

  public void setCheckMaxRpcTimeout(java.time.Duration checkMaxRpcTimeout) {
    this.checkMaxRpcTimeout = Duration.parse(checkMaxRpcTimeout.toString());
  }

  public Duration getCheckTotalTimeout() {
    return this.checkTotalTimeout;
  }

  public void setCheckTotalTimeout(java.time.Duration checkTotalTimeout) {
    this.checkTotalTimeout = Duration.parse(checkTotalTimeout.toString());
  }

  public Double getReportRpcTimeoutMultiplier() {
    return this.reportRpcTimeoutMultiplier;
  }

  public void setReportRpcTimeoutMultiplier(Double reportRpcTimeoutMultiplier) {
    this.reportRpcTimeoutMultiplier = reportRpcTimeoutMultiplier;
  }
}
