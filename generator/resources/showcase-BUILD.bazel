# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""
Provides proto_library target
Exports grpc service config
"""
load ("@rules_proto//proto:defs.bzl",
  "proto_library")

load(
  "@com_google_googleapis_imports//:imports.bzl",
  "java_gapic_assembly_gradle_pkg",
  "java_gapic_library",
  "java_proto_library",
  "proto_library_with_info",
)


# This is an API workspace, having public visibility by default makes perfect sense.
package(default_visibility = ["//visibility:public"])
exports_files(glob(["*.json"]) + glob(["*.yaml"]))

##
# the proto files wrapped with dependencies
#
proto_library(
  name = "showcase_proto",
  srcs = [":compliance.proto", ":echo.proto", ":identity.proto", ":messaging.proto", ":sequence.proto", ":testing.proto" ],
  deps = [
    "@com_google_googleapis//google/api:annotations_proto",
    "@com_google_googleapis//google/api:client_proto",
    "@com_google_googleapis//google/api:field_behavior_proto",
    "@com_google_googleapis//google/api:resource_proto",
    "@com_google_googleapis//google/api:routing_proto",
    "@com_google_googleapis//google/longrunning:operations_proto",
    "@com_google_googleapis//google/rpc:status_proto",
    "@com_google_googleapis//google/rpc:error_details_proto",
    "@com_google_protobuf//:duration_proto",
    "@com_google_protobuf//:empty_proto",
    "@com_google_protobuf//:field_mask_proto",
    "@com_google_protobuf//:timestamp_proto",
  ]
)

proto_library_with_info(
    name = "showcase_proto_with_info",
    deps = [
        ":showcase_proto",
    ],
)

java_proto_library(
    name = "showcase_java_proto",
    deps = [
        ":showcase_proto",
    ],
)

# This should either replace the existing monolith target or have a unique name
# that includes "java_gapic".
java_gapic_library(
    name = "showcase_java_gapic",
    srcs = [":showcase_proto_with_info"],
    grpc_service_config = "showcase_grpc_service_config.json",
    test_deps = [
        ":showcase_java_grpc",
    ],
    deps = [
        ":showcase_java_proto",
    ],
)

java_gapic_assembly_gradle_pkg(
    # This name should be unique from the existing target name.
    name = "google-cloud-showcase-v1beta1-java",
    deps = [
        # This is the new microgen target above.
        ":showcase_java_gapic",
        # The following targets already exist.
        ":showcase_java_grpc",
        ":showcase_java_proto",
        ":showcase_proto",
    ],
)